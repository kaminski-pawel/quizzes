[
  {
    "content": "A company collects data for temperature, humidity, and atmospheric pressure in cities across multiple continents. The average volume of data that the company collects from each site daily is 500 GB. Each site has a high-speed Internet connection. The company wants to aggregate the data from all these global sites as quickly as possible in a single Amazon S3 bucket. The solution must minimize operational complexity. Which solution meets these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Turn on S3 Transfer Acceleration on the destination S3 bucket. Use multipart uploads to directly upload site data to the destination S3 bucket.",
        "is_correct": true
      },
      {
        "content": "Upload the data from each site to an S3 bucket in the closest Region. Use S3 Cross-Region Replication to copy objects to the destination S3 bucket. Then remove the data from the origin S3 bucket.",
        "is_correct": false
      },
      {
        "content": "Schedule AWS Snowball Edge Storage Optimized device jobs daily to transfer data from each site to the closest Region. Use S3 Cross-Region Replication to copy objects to the destination S3 bucket.",
        "is_correct": false
      },
      {
        "content": "Upload the data from each site to an Amazon EC2 instance in the closest Region. Store the data in an Amazon Elastic Block Store (Amazon EBS) volume. At regular intervals, take an EBS snapshot and copy it to the Region that contains the destination S3 bucket. Restore the EBS volume in that Region.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "S3 Transfer Acceleration is the best solution cz it's faster , good for high speed, Transfer Acceleration is designed to optimize transfer speeds from across the world into S3 buckets."
    }
  },
  {
    "content": "A company needs the ability to analyze the log files of its proprietary application. The logs are stored in JSON format in an Amazon S3 bucket. Queries will be simple and will run on-demand. A solutions architect needs to perform the analysis with minimal changes to the existing architecture. What should the solutions architect do to meet these requirements with the LEAST amount of operational overhead?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use Amazon Redshift to load all the content into one place and run the SQL queries as needed.",
        "is_correct": false
      },
      {
        "content": "Use Amazon CloudWatch Logs to store the logs. Run SQL queries as needed from the Amazon CloudWatch console.",
        "is_correct": false
      },
      {
        "content": "Use Amazon Athena directly with Amazon S3 to run the queries as needed.",
        "is_correct": true
      },
      {
        "content": "Use AWS Glue to catalog the logs. Use a transient Apache Spark cluster on Amazon EMR to run the SQL queries as needed.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Amazon Athena is an interactive query service that makes it easy to analyze data directly in Amazon Simple Storage Service (Amazon S3) using standard SQL. With a few actions in the AWS Management Console, you can point Athena at your data stored in Amazon S3 and begin using standard SQL to run ad-hoc queries and get results in seconds."
    }
  },
  {
    "content": "A company uses AWS Organizations to manage multiple AWS accounts for different departments. The management account has an Amazon S3 bucket that contains project reports. The company wants to limit access to this S3 bucket to only users of accounts within the organization in AWS Organizations. Which solution meets these requirements with the LEAST amount of operational overhead?",
    "widget": "CI",
    "answers": [
      {
        "content": "Add the aws PrincipalOrgID global condition key with a reference to the organization ID to the S3 bucket policy.",
        "is_correct": true
      },
      {
        "content": "Create an organizational unit (OU) for each department. Add the aws:PrincipalOrgPaths global condition key to the S3 bucket policy.",
        "is_correct": false
      },
      {
        "content": "Use AWS CloudTrail to monitor the CreateAccount, InviteAccountToOrganization, LeaveOrganization, and RemoveAccountFromOrganization events. Update the S3 bucket policy accordingly.",
        "is_correct": false
      },
      {
        "content": "Tag each user that needs access to the S3 bucket. Add the aws:PrincipalTag global condition key to the S3 bucket policy.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "aws:PrincipalOrgID Validates if the principal accessing the resource belongs to an account in your organization. See [docs](https://aws.amazon.com/blogs/security/control-access-to-aws-resources-by-using-the-aws-organization-of-iam-principals/)."
    }
  },
  {
    "content": "An application runs on an Amazon EC2 instance in a VPC. The application processes logs that are stored in an Amazon S3 bucket. The EC2 instance needs to access the S3 bucket without connectivity to the internet. Which solution will provide private network connectivity to Amazon S3?",
    "widget": "CI",
    "answers": [
      {
        "content": "Create a gateway VPC endpoint to the S3 bucket.",
        "is_correct": true
      },
      {
        "content": "Stream the logs to Amazon CloudWatch Logs. Export the logs to the S3 bucket.",
        "is_correct": false
      },
      {
        "content": "Create an instance profile on Amazon EC2 to allow S3 access.",
        "is_correct": false
      },
      {
        "content": "Create an Amazon API Gateway API with a private link to access the S3 endpoint.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "You can access Amazon S3 from your VPC using gateway VPC endpoints. After you create the gateway endpoint, you can add it as a target in your route table for traffic destined from your VPC to Amazon S3. You can create a policy that restricts access to specific IP address ranges by using the aws:VpcSourceIp condition key. See [docs](https://docs.aws.amazon.com/vpc/latest/privatelink/vpc-endpoints-s3.html)."
    }
  },
  {
    "content": "A company is hosting a web application on AWS using a single Amazon EC2 instance that stores user-uploaded documents in an Amazon EBS volume. For better scalability and availability, the company duplicated the architecture and created a second EC2 instance and EBS volume in another Availability Zone, placing both behind an Application Load Balancer. After completing this change, users reported that, each time they refreshed the website, they could see one subset of their documents or the other, but never all of the documents at the same time. What should a solutions architect propose to ensure users see all of their documents at once?",
    "widget": "CI",
    "answers": [
      {
        "content": "Copy the data so both EBS volumes contain all the documents",
        "is_correct": false
      },
      {
        "content": "Configure the Application Load Balancer to direct a user to the server with the documents",
        "is_correct": false
      },
      {
        "content": "Copy the data from both EBS volumes to Amazon EFS. Modify the application to save new documents to Amazon EFS",
        "is_correct": true
      },
      {
        "content": "Configure the Application Load Balancer to send the request to both servers. Return each document from the correct server",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Answer is C. Adaptive throughput – EFS’s performance can scale in-line with its storage, operating at a higher throughput for sudden, high-volume file dumps, reaching up to 500,000 IOPS or 10 GB per second Totally elastic – once you’ve spun up an EFS instance, you can add add files without worrying about provisioning or disturbing your application’s performance Additional accessibility – EFS can be mounted from different EC2 instances, but it can also cross the AWS region boundary via the use of VPC peering"
    }
  },
  {
    "content": "A company uses NFS to store large video files in on-premises network attached storage. Each video file ranges in size from 1 MB to 500 GB. The total storage is 70 TB and is no longer growing. The company decides to migrate the video files to Amazon S3. The company must migrate the video files as soon as possible while using the least possible network bandwidth. Which solution will meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Create an S3 bucket. Create an IAM role that has permissions to write to the S3 bucket. Use the AWS CLI to copy all files locally to the S3 bucket.",
        "is_correct": false
      },
      {
        "content": "Create an AWS Snowball Edge job. Receive a Snowball Edge device on premises. Use the Snowball Edge client to transfer data to the device. Return the device so that AWS can import the data into Amazon S3.",
        "is_correct": true
      },
      {
        "content": "Deploy an S3 File Gateway on premises. Create a public service endpoint to connect to the S3 File Gateway. Create an S3 bucket. Create a new NFS file share on the S3 File Gateway. Point the new file share to the S3 bucket. Transfer the data from the existing NFS file share to the S3 File Gateway.",
        "is_correct": false
      },
      {
        "content": "Set up an AWS Direct Connect connection between the on-premises network and AWS. Deploy an S3 File Gateway on premises. Create a public virtual interface (VIF) to connect to the S3 File Gateway. Create an S3 bucket. Create a new NFS file share on the S3 File Gateway. Point the new file share to the S3 bucket. Transfer the data from the existing NFS file share to the S3 File Gateway.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "B. On a Snowball Edge device you can copy files with a speed of up to 100Gbps. 70TB will take around 5600 seconds, so very quickly, less than 2 hours. The downside is that it'll take between 4-6 working days to receive the device and then another 2-3 working days to send it back and for AWS to move the data onto S3 once it reaches them. Total time: 6-9 working days. Bandwidth used: 0. <br><br>C. File Gateway uses the Internet, so maximum speed will be at most 1Gbps, so it'll take a minimum of 6.5 days and you use 70TB of Internet bandwidth. <br><br>D. You can achieve speeds of up to 10Gbps with Direct Connect. Total time 15.5 hours and you will use 70TB of bandwidth. However, what's interesting is that the question does not specific what type of bandwidth? Direct Connect does not use your Internet bandwidth, as you will have a dedicate peer to peer connectivity between your on-prem and the AWS Cloud, so technically, you're not using your \"public\" bandwidth.<br><br>The requirements are a bit too vague but I think that B is the most appropriate answer, although D might also be correct if the bandwidth usage refers strictly to your public connectivity."
    }
  },
  {
    "content": "A company has an application that ingests incoming messages. Dozens of other applications and microservices then quickly consume these messages. The number of messages varies drastically and sometimes increases suddenly to 100,000 each second. The company wants to decouple the solution and increase scalability. Which solution meets these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Persist the messages to Amazon Kinesis Data Analytics. Configure the consumer applications to read and process the messages.",
        "is_correct": false
      },
      {
        "content": "Deploy the ingestion application on Amazon EC2 instances in an Auto Scaling group to scale the number of EC2 instances based on CPU metrics.",
        "is_correct": false
      },
      {
        "content": "Write the messages to Amazon Kinesis Data Streams with a single shard. Use an AWS Lambda function to preprocess messages and store them in Amazon DynamoDB. Configure the consumer applications to read from DynamoDB to process the messages.",
        "is_correct": false
      },
      {
        "content": "Publish the messages to an Amazon Simple Notification Service (Amazon SNS) topic with multiple Amazon Simple Queue Service (Amazon SOS) subscriptions. Configure the consumer applications to process the messages from the queues.",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "D. SNS Fan Out Pattern https://docs.aws.amazon.com/sns/latest/dg/sns-common-scenarios.html (A is wrong Kinesis Analysis does not 'persist' by itself.) <br><br> I go for D because decoupling = SQS in most cases, and they did mention SNS into multiple SQS so with multiple SQS you can handle more than 100k requests <br><br> Argument for A - limit of 30 000 per second. See [docs](https://docs.aws.amazon.com/general/latest/gr/sns.html)."
    }
  },
  {
    "content": "A company is migrating a distributed application to AWS. The application serves variable workloads. The legacy platform consists of a primary server that coordinates jobs across multiple compute nodes. The company wants to modernize the application with a solution that maximizes resiliency and scalability. How should a solutions architect design the architecture to meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Configure an Amazon Simple Queue Service (Amazon SQS) queue as a destination for the jobs. Implement the compute nodes with Amazon EC2 instances that are managed in an Auto Scaling group. Configure EC2 Auto Scaling to use scheduled scaling.",
        "is_correct": false
      },
      {
        "content": "Configure an Amazon Simple Queue Service (Amazon SQS) queue as a destination for the jobs. Implement the compute nodes with Amazon EC2 instances that are managed in an Auto Scaling group. Configure EC2 Auto Scaling based on the size of the queue.",
        "is_correct": true
      },
      {
        "content": "Implement the primary server and the compute nodes with Amazon EC2 instances that are managed in an Auto Scaling group. Configure AWS CloudTrail as a destination for the jobs. Configure EC2 Auto Scaling based on the load on the primary server.",
        "is_correct": false
      },
      {
        "content": "Implement the primary server and the compute nodes with Amazon EC2 instances that are managed in an Auto Scaling group. Configure Amazon EventBridge (Amazon CloudWatch Events) as a destination for the jobs. Configure EC2 Auto Scaling based on the load on the compute nodes.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "A: doesn't make sense to schedule auto-scaling <br><br> C: Not sure how CloudTrail would be helpful in this case, at all. <br><br> D: EventBridge is not really used for this purpose, wouldn't be very reliable."
    }
  },
  {
    "content": "A company is running an SMB file server in its data center. The file server stores large files that are accessed frequently for the first few days after the files are created. After 7 days the files are rarely accessed. The total data size is increasing and is close to the company's total storage capacity. A solutions architect must increase the company's available storage space without losing low-latency access to the most recently accessed files. The solutions architect must also provide file lifecycle management to avoid future storage issues. Which solution will meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use AWS DataSync to copy data that is older than 7 days from the SMB file server to AWS.",
        "is_correct": false
      },
      {
        "content": "Create an Amazon S3 File Gateway to extend the company's storage space. Create an S3 Lifecycle policy to transition the data to S3 Glacier Deep Archive after 7 days.",
        "is_correct": true
      },
      {
        "content": "Create an Amazon FSx for Windows File Server file system to extend the company's storage space.",
        "is_correct": false
      },
      {
        "content": "Install a utility on each user's computer to access Amazon S3. Create an S3 Lifecycle policy to transition the data to S3 Glacier Flexible Retrieval after 7 days.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Answer directly points towards file gateway with lifecycles. See [docs](https://docs.aws.amazon.com/filegateway/latest/files3/CreatingAnSMBFileShare.html) <br><br> D is wrong because utility function is vague and there is no need for flexible storage."
    }
  },
  {
    "content": "A company is building an ecommerce web application on AWS. The application sends information about new orders to an Amazon API Gateway REST API to process. The company wants to ensure that orders are processed in the order that they are received. Which solution will meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use an API Gateway integration to publish a message to an Amazon Simple Notification Service (Amazon SNS) topic when the application receives an order. Subscribe an AWS Lambda function to the topic to perform processing.",
        "is_correct": false
      },
      {
        "content": "Use an API Gateway integration to send a message to an Amazon Simple Queue Service (Amazon SQS) FIFO queue when the application receives an order. Configure the SQS FIFO queue to invoke an AWS Lambda function for processing.",
        "is_correct": true
      },
      {
        "content": "Use an API Gateway authorizer to block any requests while the application processes an order.",
        "is_correct": false
      },
      {
        "content": "Use an API Gateway integration to send a message to an Amazon Simple Queue Service (Amazon SQS) standard queue when the application receives an order. Configure the SQS standard queue to invoke an AWS Lambda function for processing.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "B because FIFO is made for that specific purpose"
    }
  },
  {
    "content": "A company has an application that runs on Amazon EC2 instances and uses an Amazon Aurora database. The EC2 instances connect to the database by using user names and passwords that are stored locally in a file. The company wants to minimize the operational overhead of credential management. What should a solutions architect do to accomplish this goal?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use AWS Secrets Manager. Turn on automatic rotation.",
        "is_correct": true
      },
      {
        "content": "Use AWS Systems Manager Parameter Store. Turn on automatic rotation.",
        "is_correct": false
      },
      {
        "content": "Create an Amazon S3 bucket to store objects that are encrypted with an AWS Key Management Service (AWS KMS) encryption key. Migrate the credential file to the S3 bucket. Point the application to the S3 bucket.",
        "is_correct": false
      },
      {
        "content": "Create an encrypted Amazon Elastic Block Store (Amazon EBS) volume for each EC2 instance. Attach the new EBS volume to each EC2 instance. Migrate the credential file to the new EBS volume. Point the application to the new EBS volume.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "B is wrong because parameter store does not support auto rotation, unless the customer writes it themselves, A is the answer. "
    }
  },
  {
    "content": "A global company hosts its web application on Amazon EC2 instances behind an Application Load Balancer (ALB). The web application has static data and dynamic data. The company stores its static data in an Amazon S3 bucket. The company wants to improve performance and reduce latency for the static data and dynamic data. The company is using its own domain name registered with Amazon Route 53. What should a solutions architect do to meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Create an Amazon CloudFront distribution that has the S3 bucket and the ALB as origins. Configure Route 53 to route traffic to the CloudFront distribution.",
        "is_correct": true
      },
      {
        "content": "Create an Amazon CloudFront distribution that has the ALB as an origin. Create an AWS Global Accelerator standard accelerator that has the S3 bucket as an endpoint Configure Route 53 to route traffic to the CloudFront distribution.",
        "is_correct": false
      },
      {
        "content": "Create an Amazon CloudFront distribution that has the S3 bucket as an origin. Create an AWS Global Accelerator standard accelerator that has the ALB and the CloudFront distribution as endpoints. Create a custom domain name that points to the accelerator DNS name. Use the custom domain name as an endpoint for the web application.",
        "is_correct": false
      },
      {
        "content": "Create an Amazon CloudFront distribution that has the ALB as an origin. Create an AWS Global Accelerator standard accelerator that has the S3 bucket as an endpoint. Create two domain names. Point one domain name to the CloudFront DNS name for dynamic content. Point the other domain name to the accelerator DNS name for static content. Use the domain names as endpoints for the web application.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Answer is A Explanation - AWS Global Accelerator vs CloudFront • They both use the AWS global network and its edge locations around the world • Both services integrate with AWS Shield for DDoS protection. • CloudFront • Improves performance for both cacheable content (such as images and videos) • Dynamic content (such as API acceleration and dynamic site delivery) • Content is served at the edge • Global Accelerator • Improves performance for a wide range of applications over TCP or UDP • Proxying packets at the edge to applications running in one or more AWS Regions. • Good fit for non-HTTP use cases, such as gaming (UDP), IoT (MQTT), or Voice over IP • Good for HTTP use cases that require static IP addresses • Good for HTTP use cases that required deterministic, fast regional failover"
    }
  },
  {
    "content": "A company performs monthly maintenance on its AWS infrastructure. During these maintenance activities, the company needs to rotate the credentials for its Amazon RDS for MySQL databases across multiple AWS Regions. Which solution will meet these requirements with the LEAST operational overhead?",
    "widget": "CI",
    "answers": [
      {
        "content": "Store the credentials as secrets in AWS Secrets Manager. Use multi-Region secret replication for the required Regions. Configure Secrets Manager to rotate the secrets on a schedule.",
        "is_correct": true
      },
      {
        "content": "Store the credentials as secrets in AWS Systems Manager by creating a secure string parameter. Use multi-Region secret replication for the required Regions. Configure Systems Manager to rotate the secrets on a schedule.",
        "is_correct": false
      },
      {
        "content": "Store the credentials in an Amazon S3 bucket that has server-side encryption (SSE) enabled. Use Amazon EventBridge (Amazon CloudWatch Events) to invoke an AWS Lambda function to rotate the credentials.",
        "is_correct": false
      },
      {
        "content": "Encrypt the credentials as secrets by using AWS Key Management Service (AWS KMS) multi-Region customer managed keys. Store the secrets in an Amazon DynamoDB global table. Use an AWS Lambda function to retrieve the secrets from DynamoDB. Use the RDS API to rotate the secrets.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "AWS launched a new feature for [AWS Secrets Manager](https://aws.amazon.com/secrets-manager/) that makes it possible for you to [replicate secrets across multiple AWS Regions](https://docs.aws.amazon.com/secretsmanager/latest/userguide/create-manage-multi-region-secrets.html)."
    }
  },
  {
    "content": "A company runs an ecommerce application on Amazon EC2 instances behind an Application Load Balancer. The instances run in an Amazon EC2 Auto Scaling group across multiple Availability Zones. The Auto Scaling group scales based on CPU utilization metrics. The ecommerce application stores the transaction data in a MySQL 8.0 database that is hosted on a large EC2 instance. The database's performance degrades quickly as application load increases. The application handles more read requests than write transactions. The company wants a solution that will automatically scale the database to meet the demand of unpredictable read workloads while maintaining high availability. Which solution will meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use Amazon Redshift with a single node for leader and compute functionality.",
        "is_correct": false
      },
      {
        "content": "Use Amazon RDS with a Single-AZ deployment Configure Amazon RDS to add reader instances in a different Availability Zone.",
        "is_correct": false
      },
      {
        "content": "Use Amazon Aurora with a Multi-AZ deployment. Configure Aurora Auto Scaling with Aurora Replicas.",
        "is_correct": true
      },
      {
        "content": "Use Amazon ElastiCache for Memcached with EC2 Spot Instances.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Aurora is fast, and for this case will support unpredictable workloads through its read replicas. Simple! <br><br>  C, AURORA is 5x performance improvement over MySQL on RDS and handles more read requests than write,; maintaining high availability = Multi-AZ deployment."
    }
  },
  {
    "content": "A company recently migrated to AWS and wants to implement a solution to protect the traffic that flows in and out of the production VPC. The company had an inspection server in its on-premises data center. The inspection server performed specific operations such as traffic flow inspection and traffic filtering. The company wants to have the same functionalities in the AWS Cloud. Which solution will meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use Amazon GuardDuty for traffic inspection and traffic filtering in the production VPC.",
        "is_correct": false
      },
      {
        "content": "Use Traffic Mirroring to mirror traffic from the production VPC for traffic inspection and filtering.",
        "is_correct": false
      },
      {
        "content": "Use AWS Network Firewall to create the required rules for traffic inspection and traffic filtering for the production VPC.",
        "is_correct": true
      },
      {
        "content": "Use AWS Firewall Manager to create the required rules for traffic inspection and traffic filtering for the production VPC.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "AWS Network Firewall supports both inspection and filtering as required. B is incorrect because Traffic Mirroring only for inspection. <br><br>  **AWS Network Firewall** is a stateful, managed network firewall and intrusion detection and prevention service for your virtual private cloud (VPC) that you created in Amazon Virtual Private Cloud (Amazon VPC). With Network Firewall, you can filter traffic at the perimeter of your VPC. This includes filtering traffic going to and coming from an internet gateway, NAT gateway, or over VPN or AWS Direct Connect. "
    }
  },
  {
    "content": "A company hosts a data lake on AWS. The data lake consists of data in Amazon S3 and Amazon RDS for PostgreSQL. The company needs a reporting solution that provides data visualization and includes all the data sources within the data lake. Only the company's management team should have full access to all the visualizations. The rest of the company should have only limited access. Which solution will meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Create an analysis in Amazon QuickSight. Connect all the data sources and create new datasets. Publish dashboards to visualize the data. Share the dashboards with the appropriate IAM roles.",
        "is_correct": false
      },
      {
        "content": "Create an analysis in Amazon QuickSight. Connect all the data sources and create new datasets. Publish dashboards to visualize the data. Share the dashboards with the appropriate users and groups.",
        "is_correct": true
      },
      {
        "content": "Create an AWS Glue table and crawler for the data in Amazon S3. Create an AWS Glue extract, transform, and load (ETL) job to produce reports. Publish the reports to Amazon S3. Use S3 bucket policies to limit access to the reports.",
        "is_correct": false
      },
      {
        "content": "Create an AWS Glue table and crawler for the data in Amazon S3. Use Amazon Athena Federated Query to access data within Amazon RDS for PostgreSQL. Generate reports by using Amazon Athena. Publish the reports to Amazon S3. Use S3 bucket policies to limit access to the reports.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "By default, dashboards in Amazon QuickSight aren't shared with anyone and are only accessible to the owner. However, after you publish a dashboard, you can share it with other users or groups in your QuickSight account. "
    }
  },
  {
    "content": "A company is implementing a new business application. The application runs on two Amazon EC2 instances and uses an Amazon S3 bucket for document storage. A solutions architect needs to ensure that the EC2 instances can access the S3 bucket. What should the solutions architect do to meet this requirement?",
    "widget": "CI",
    "answers": [
      {
        "content": "Create an IAM role that grants access to the S3 bucket. Attach the role to the EC2 instances.",
        "is_correct": true
      },
      {
        "content": "Create an IAM policy that grants access to the S3 bucket. Attach the policy to the EC2 instances.",
        "is_correct": false
      },
      {
        "content": "Create an IAM group that grants access to the S3 bucket. Attach the group to the EC2 instances.",
        "is_correct": false
      },
      {
        "content": "Create an IAM user that grants access to the S3 bucket. Attach the user account to the EC2 instances.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": ""
    }
  },
  {
    "content": "An application development team is designing a microservice that will convert large images to smaller, compressed images. When a user uploads an image through the web interface, the microservice should store the image in an Amazon S3 bucket, process and compress the image with an AWS Lambda function, and store the image in its compressed form in a different S3 bucket. A solutions architect needs to design a solution that uses durable, stateless components to process the images automatically. Which combination of actions will meet these requirements? (Choose two.)",
    "widget": "CM",
    "answers": [
      {
        "content": "Create an Amazon Simple Queue Service (Amazon SQS) queue. Configure the S3 bucket to send a notification to the SQS queue when an image is uploaded to the S3 bucket.",
        "is_correct": true
      },
      {
        "content": "Configure the Lambda function to use the Amazon Simple Queue Service (Amazon SQS) queue as the invocation source. When the SQS message is successfully processed, delete the message in the queue.",
        "is_correct": true
      },
      {
        "content": "Configure the Lambda function to monitor the S3 bucket for new uploads. When an uploaded image is detected, write the file name to a text file in memory and use the text file to keep track of the images that were processed.",
        "is_correct": false
      },
      {
        "content": "Launch an Amazon EC2 instance to monitor an Amazon Simple Queue Service (Amazon SQS) queue. When items are added to the queue, log the file name in a text file on the EC2 instance and invoke the Lambda function.",
        "is_correct": false
      },
      {
        "content": "Configure an Amazon EventBridge (Amazon CloudWatch Events) event to monitor the S3 bucket. When an image is uploaded, send an alert to an Amazon ample Notification Service (Amazon SNS) topic with the application owner's email address for further processing.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "To design a solution that uses durable, stateless components to process images automatically, a solutions architect could consider the following actions:<br><br>Create an SQS queue and configuring the S3 bucket to send a notification to the queue when an image is uploaded. This allows the application to decouple the image upload process from the image processing process and ensures that the image processing process is triggered automatically when a new image is uploaded.<br><br>Configure the Lambda function to use the SQS queue as the invocation source. When the SQS message is successfully processed, the message is deleted from the queue. This ensures that the Lambda function is invoked only once per image and that the image is not processed multiple times."
    }
  },
  {
    "content": "A company has a three-tier web application that is deployed on AWS. The web servers are deployed in a public subnet in a VPC. The application servers and database servers are deployed in private subnets in the same VPC. The company has deployed a third-party virtual firewall appliance from AWS Marketplace in an inspection VPC. The appliance is configured with an IP interface that can accept IP packets. A solutions architect needs to integrate the web application with the appliance to inspect all traffic to the application before the traffic reaches the web server. Which solution will meet these requirements with the LEAST operational overhead?",
    "widget": "CI",
    "answers": [
      {
        "content": "Create a Network Load Balancer in the public subnet of the application's VPC to route the traffic to the appliance for packet inspection.",
        "is_correct": false
      },
      {
        "content": "Create an Application Load Balancer in the public subnet of the application's VPC to route the traffic to the appliance for packet inspection.",
        "is_correct": false
      },
      {
        "content": "Deploy a transit gateway in the inspection VPConfigure route tables to route the incoming packets through the transit gateway.",
        "is_correct": false
      },
      {
        "content": "Deploy a Gateway Load Balancer in the inspection VPC. Create a Gateway Load Balancer endpoint to receive the incoming packets and forward the packets to the appliance.",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": ""
    }
  },
  {
    "content": "A company wants to improve its ability to clone large amounts of production data into a test environment in the same AWS Region. The data is stored in Amazon EC2 instances on Amazon Elastic Block Store (Amazon EBS) volumes. Modifications to the cloned data must not affect the production environment. The software that accesses this data requires consistently high I/O performance. A solutions architect needs to minimize the time that is required to clone the production data into the test environment. Which solution will meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Take EBS snapshots of the production EBS volumes. Restore the snapshots onto EC2 instance store volumes in the test environment.",
        "is_correct": false
      },
      {
        "content": "Configure the production EBS volumes to use the EBS Multi-Attach feature. Take EBS snapshots of the production EBS volumes. Attach the production EBS volumes to the EC2 instances in the test environment.",
        "is_correct": false
      },
      {
        "content": "Take EBS snapshots of the production EBS volumes. Create and initialize new EBS volumes. Attach the new EBS volumes to EC2 instances in the test environment before restoring the volumes from the production EBS snapshots.",
        "is_correct": false
      },
      {
        "content": "Take EBS snapshots of the production EBS volumes. Turn on the EBS fast snapshot restore feature on the EBS snapshots. Restore the snapshots into new EBS volumes. Attach the new EBS volumes to EC2 instances in the test environment.",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "D: Fast snapshots Amazon EBS fast snapshot restore (FSR) enables you to create a volume from a snapshot that is fully initialized at creation. This eliminates the latency of I/O operations on a block when it is accessed for the first time. Volumes that are created using fast snapshot restore instantly deliver all of their provisioned performance. "
    }
  },
  {
    "content": "An ecommerce company wants to launch a one-deal-a-day website on AWS. Each day will feature exactly one product on sale for a period of 24 hours. The company wants to be able to handle millions of requests each hour with millisecond latency during peak hours. Which solution will meet these requirements with the LEAST operational overhead?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use Amazon S3 to host the full website in different S3 buckets. Add Amazon CloudFront distributions. Set the S3 buckets as origins for the distributions. Store the order data in Amazon S3.",
        "is_correct": false
      },
      {
        "content": "Deploy the full website on Amazon EC2 instances that run in Auto Scaling groups across multiple Availability Zones. Add an Application Load Balancer (ALB) to distribute the website traffic. Add another ALB for the backend APIs. Store the data in Amazon RDS for MySQL.",
        "is_correct": false
      },
      {
        "content": "Migrate the full application to run in containers. Host the containers on Amazon Elastic Kubernetes Service (Amazon EKS). Use the Kubernetes Cluster Autoscaler to increase and decrease the number of pods to process bursts in traffic. Store the data in Amazon RDS for MySQL.",
        "is_correct": false
      },
      {
        "content": "Use an Amazon S3 bucket to host the website's static content. Deploy an Amazon CloudFront distribution. Set the S3 bucket as the origin. Use Amazon API Gateway and AWS Lambda functions for the backend APIs. Store the data in Amazon DynamoDB. ",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "D because all of the components are infinitely scalable dynamoDB, API Gateway, Lambda, and of course s3+cloudfront. <br><br>  the keyword was millisecond latency. Option B suggests RDS as the database, but Option D is DynamoDB."
    }
  },
  {
    "content": "A solutions architect is using Amazon S3 to design the storage architecture of a new digital media application. The media files must be resilient to the loss of an Availability Zone. Some files are accessed frequently while other files are rarely accessed in an unpredictable pattern. The solutions architect must minimize the costs of storing and retrieving the media files. Which storage option meets these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "S3 Standard",
        "is_correct": false
      },
      {
        "content": "S3 Intelligent-Tiering",
        "is_correct": true
      },
      {
        "content": "S3 Standard-Infrequent Access (S3 Standard-IA)",
        "is_correct": false
      },
      {
        "content": "S3 One Zone-Infrequent Access (S3 One Zone-IA)",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "\"unpredictable pattern\" - always go for Intelligent Tiering of S3 "
    }
  },
  {
    "content": "A company is storing backup files by using Amazon S3 Standard storage. The files are accessed frequently for 1 month. However, the files are not accessed after 1 month. The company must keep the files indefinitely. Which storage solution will meet these requirements MOST cost-effectively?",
    "widget": "CI",
    "answers": [
      {
        "content": "Configure S3 Intelligent-Tiering to automatically migrate objects.",
        "is_correct": false
      },
      {
        "content": "Create an S3 Lifecycle configuration to transition objects from S3 Standard to S3 Glacier Deep Archive after 1 month.",
        "is_correct": true
      },
      {
        "content": "Create an S3 Lifecycle configuration to transition objects from S3 Standard to S3 Standard-Infrequent Access (S3 Standard-IA) after 1 month.",
        "is_correct": false
      },
      {
        "content": "Create an S3 Lifecycle configuration to transition objects from S3 Standard to S3 One Zone-Infrequent Access (S3 One Zone-IA) after 1 month.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "B: Transition to Glacier deep archive for cost efficiency "
    }
  },
  {
    "content": "A company observes an increase in Amazon EC2 costs in its most recent bill. The billing team notices unwanted vertical scaling of instance types for a couple of EC2 instances. A solutions architect needs to create a graph comparing the last 2 months of EC2 costs and perform an in-depth analysis to identify the root cause of the vertical scaling. How should the solutions architect generate the information with the LEAST operational overhead?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use AWS Budgets to create a budget report and compare EC2 costs based on instance types.",
        "is_correct": false
      },
      {
        "content": "Use Cost Explorer's granular filtering feature to perform an in-depth analysis of EC2 costs based on instance types.",
        "is_correct": true
      },
      {
        "content": "Use graphs from the AWS Billing and Cost Management dashboard to compare EC2 costs based on instance types for the last 2 months.",
        "is_correct": false
      },
      {
        "content": "Use AWS Cost and Usage Reports to create a report and send it to an Amazon S3 bucket. Use Amazon QuickSight with Amazon S3 as a source to generate an interactive graph based on instance types.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Because Cost Explorer also provide recommandation about after 12month, I think B is better than C. <br><br>  B: AWS Cost Explorer is a tool that enables you to view and analyze your costs and usage. You can explore your usage and costs using the main graph, the Cost Explorer cost and usage reports, or the Cost Explorer RI reports. You can view data for up to the last 12 months. See [docs](https://docs.aws.amazon.com/cost-management/latest/userguide/ce-what-is.html)."
    }
  },
  {
    "content": "A company is designing an application. The application uses an AWS Lambda function to receive information through Amazon API Gateway and to store the information in an Amazon Aurora PostgreSQL database. During the proof-of-concept stage, the company has to increase the Lambda quotas significantly to handle the high volumes of data that the company needs to load into the database. A solutions architect must recommend a new design to improve scalability and minimize the configuration effort. Which solution will meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Refactor the Lambda function code to Apache Tomcat code that runs on Amazon EC2 instances. Connect the database by using native Java Database Connectivity (JDBC) drivers.",
        "is_correct": false
      },
      {
        "content": "Change the platform from Aurora to Amazon DynamoDProvision a DynamoDB Accelerator (DAX) cluster. Use the DAX client SDK to point the existing DynamoDB API calls at the DAX cluster.",
        "is_correct": false
      },
      {
        "content": "Set up two Lambda functions. Configure one function to receive the information. Configure the other function to load the information into the database. Integrate the Lambda functions by using Amazon Simple Notification Service (Amazon SNS).",
        "is_correct": false
      },
      {
        "content": "Set up two Lambda functions. Configure one function to receive the information. Configure the other function to load the information into the database. Integrate the Lambda functions by using an Amazon Simple Queue Service (Amazon SQS) queue.",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "A - refactoring can be a solution, BUT requires a LOT of effort - not the answer. <br><br>  B - DynamoDB is NoSQL and Aurora is SQL, so it requires a DB migration... again a LOT of effort, so no the answer <br><br>  C and D are similar in structure, but... <br><br>  C uses SNS, which would notify the 2nd Lambda function... provoking the same bottleneck... not the solution. <br><br>  D uses SQS, so the 2nd lambda function can go to the queue when responsive to keep with the DB load process. <br><br>  Usually the app decoupling helps with the performance improvement by distributing load. In this case, the bottleneck is solved by uses queues... so D is the answer."
    }
  },
  {
    "content": "A company needs to review its AWS Cloud deployment to ensure that its Amazon S3 buckets do not have unauthorized configuration changes.<br><br>What should a solutions architect do to accomplish this goal?",
    "widget": "CI",
    "answers": [
      {
        "content": "Turn on AWS Config with the appropriate rules.",
        "is_correct": true
      },
      {
        "content": "Turn on AWS Trusted Advisor with the appropriate checks.",
        "is_correct": false
      },
      {
        "content": "Turn on Amazon Inspector with the appropriate assessment template.",
        "is_correct": false
      },
      {
        "content": "Turn on Amazon S3 server access logging. Configure Amazon EventBridge (Amazon Cloud Watch Events).",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "In short: Configuration changes = AWS Config<br><br>The solution that will accomplish this goal is: Turn on AWS Config with the appropriate rules. Trusted Advisor gives you a general check of your system and identifies ways to optimize your infrastructue and improve it. While AWS Config is more about specific resource. Like stated (S3 bucket). Config lets you select particular resource you want to evaluate."
    }
  },
  {
    "content": "A company is launching a new application and will display application metrics on an Amazon CloudWatch dashboard. The company's product manager needs to access this dashboard periodically. The product manager does not have an AWS account. A solutions architect must provide access to the product manager by following the principle of least privilege.<br><br>Which solution will meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Share the dashboard from the CloudWatch console. Enter the product manager's email address, and complete the sharing steps. Provide a shareable link for the dashboard to the product manager.",
        "is_correct": true
      },
      {
        "content": "Create an IAM user specifically for the product manager. Attach the CloudWatchReadOnlyAccess AWS managed policy to the user. Share the new login credentials with the product manager. Share the browser URL of the correct dashboard with the product manager.",
        "is_correct": false
      },
      {
        "content": "Create an IAM user for the company's employees. Attach the ViewOnlyAccess AWS managed policy to the IAM user. Share the new login credentials with the product manager. Ask the product manager to navigate to the CloudWatch console and locate the dashboard by name in the Dashboards section.",
        "is_correct": false
      },
      {
        "content": "Deploy a bastion server in a public subnet. When the product manager requires access to the dashboard, start the server and share the RDP credentials. On the bastion server, ensure that the browser is configured to open the dashboard URL with cached AWS credentials that have appropriate permissions to view the dashboard.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Share a single dashboard and designate specific email addresses of the people who can view the dashboard. Each of these users creates their own password that they must enter to view the dashboard. See [docs](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch-dashboard-sharing.html)."
    }
  },
  {
    "content": "A company is migrating applications to AWS. The applications are deployed in different accounts. The company manages the accounts centrally by using AWS Organizations. The company's security team needs a single sign-on (SSO) solution across all the company's accounts. The company must continue managing the users and groups in its on-premises self-managed Microsoft Active Directory.<br><br>Which solution will meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Enable AWS Single Sign-On (AWS SSO) from the AWS SSO console. Create a one-way forest trust or a one-way domain trust to connect the company's self-managed Microsoft Active Directory with AWS SSO by using AWS Directory Service for Microsoft Active Directory.",
        "is_correct": false
      },
      {
        "content": "Enable AWS Single Sign-On (AWS SSO) from the AWS SSO console. Create a two-way forest trust to connect the company's self-managed Microsoft Active Directory with AWS SSO by using AWS Directory Service for Microsoft Active Directory.",
        "is_correct": true
      },
      {
        "content": "Use AWS Directory Service. Create a two-way trust relationship with the company's self-managed Microsoft Active Directory.",
        "is_correct": false
      },
      {
        "content": "Deploy an identity provider (IdP) on premises. Enable AWS Single Sign-On (AWS SSO) from the AWS SSO console.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Tricky question!!! forget one-way or two-way. In this scenario, AWS applications (Amazon Chime, Amazon Connect, Amazon QuickSight, AWS Single Sign-On, Amazon WorkDocs, Amazon WorkMail, Amazon WorkSpaces, AWS Client VPN, AWS Management Console, and AWS Transfer Family) need to be able to look up objects from the on-premises domain in order for them to function. This tells you that authentication needs to flow both ways. This scenario requires a two-way trust between the on-premises and AWS Managed Microsoft AD domains.<br><br>  It is a requirement of the application.<br><br> See [Scenario 2](https://aws.amazon.com/es/blogs/security/everything-you-wanted-to-know-about-trusts-with-aws-managed-microsoft-ad/)."
    }
  },
  {
    "content": "A company provides a Voice over Internet Protocol (VoIP) service that uses UDP connections. The service consists of Amazon EC2 instances that run in an Auto Scaling group. The company has deployments across multiple AWS Regions.<br><br>The company needs to route users to the Region with the lowest latency. The company also needs automated failover between Regions.<br><br>Which solution will meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Deploy a Network Load Balancer (NLB) and an associated target group. Associate the target group with the Auto Scaling group. Use the NLB as an AWS Global Accelerator endpoint in each Region.",
        "is_correct": true
      },
      {
        "content": "Deploy an Application Load Balancer (ALB) and an associated target group. Associate the target group with the Auto Scaling group. Use the ALB as an AWS Global Accelerator endpoint in each Region.",
        "is_correct": false
      },
      {
        "content": "Deploy a Network Load Balancer (NLB) and an associated target group. Associate the target group with the Auto Scaling group. Create an Amazon Route 53 latency record that points to aliases for each NLB. Create an Amazon CloudFront distribution that uses the latency record as an origin.",
        "is_correct": false
      },
      {
        "content": "Deploy an Application Load Balancer (ALB) and an associated target group. Associate the target group with the Auto Scaling group. Create an Amazon Route 53 weighted record that points to aliases for each ALB. Deploy an Amazon CloudFront distribution that uses the weighted record as an origin.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "CloudFront uses Edge Locations to cache content while Global Accelerator uses Edge Locations to find an optimal pathway to the nearest regional endpoint. CloudFront is designed to handle HTTP protocol meanwhile Global Accelerator is best used for both HTTP and non-HTTP protocols such as TCP and UDP. so i think A is a better answer"
    }
  },
  {
    "content": "A development team runs monthly resource-intensive tests on its general purpose Amazon RDS for MySQL DB instance with Performance Insights enabled. The testing lasts for 48 hours once a month and is the only process that uses the database. The team wants to reduce the cost of running the tests without reducing the compute and memory attributes of the DB instance.<br><br>Which solution meets these requirements MOST cost-effectively?",
    "widget": "CI",
    "answers": [
      {
        "content": "Stop the DB instance when tests are completed. Restart the DB instance when required.",
        "is_correct": false
      },
      {
        "content": "Use an Auto Scaling policy with the DB instance to automatically scale when tests are completed.",
        "is_correct": false
      },
      {
        "content": "Create a snapshot when tests are completed. Terminate the DB instance and restore the snapshot when required.",
        "is_correct": true
      },
      {
        "content": "Modify the DB instance to a low-capacity instance when tests are completed. Modify the DB instance again when required.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Suppose that you use a DB instance intermittently, for temporary testing, or for a daily development activity. If so, you can stop your Amazon RDS DB instance temporarily to save money. While your DB instance is stopped, you are charged for provisioned storage (including Provisioned IOPS). You're also charged for backup storage, including manual snapshots and automated backups within your specified retention window. However, you're not charged for DB instance hours. See [docs](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_StopInstance.html).<br><br>Taking a snapshot of the instance, terminating the DB and storing the snapshot is the most cost-effective solution."
    }
  },
  {
    "content": "A company that hosts its web application on AWS wants to ensure all Amazon EC2 instances. Amazon RDS DB instances. and Amazon Redshift clusters are configured with tags. The company wants to minimize the effort of configuring and operating this check.<br><br>What should a solutions architect do to accomplish this?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use AWS Config rules to define and detect resources that are not properly tagged.",
        "is_correct": true
      },
      {
        "content": "Use Cost Explorer to display resources that are not properly tagged. Tag those resources manually.",
        "is_correct": false
      },
      {
        "content": "Write API calls to check all resources for proper tag allocation. Periodically run the code on an EC2 instance.",
        "is_correct": false
      },
      {
        "content": "Write API calls to check all resources for proper tag allocation. Schedule an AWS Lambda function through Amazon CloudWatch to periodically run the code.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "https://docs.aws.amazon.com/config/latest/developerguide/tagging.html"
    }
  },
  {
    "content": "A development team needs to host a website that will be accessed by other teams. The website contents consist of HTML, CSS, client-side JavaScript, and images.<br><br>Which method is the MOST cost-effective for hosting the website?",
    "widget": "CI",
    "answers": [
      {
        "content": "Containerize the website and host it in AWS Fargate.",
        "is_correct": false
      },
      {
        "content": "Create an Amazon S3 bucket and host the website there.",
        "is_correct": true
      },
      {
        "content": "Deploy a web server on an Amazon EC2 instance to host the website.",
        "is_correct": false
      },
      {
        "content": "Configure an Application Load Balancer with an AWS Lambda target that uses the Express.js framework.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "HTML, CSS, client-side JavaScript, and images are all static resources."
    }
  },
  {
    "content": "A company runs an online marketplace web application on AWS. The application serves hundreds of thousands of users during peak hours. The company needs a scalable, near-real-time solution to share the details of millions of financial transactions with several other internal applications. Transactions also need to be processed to remove sensitive data before being stored in a document database for low-latency retrieval.<br><br>What should a solutions architect recommend to meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Store the transactions data into Amazon DynamoDB. Set up a rule in DynamoDB to remove sensitive data from every transaction upon write. Use DynamoDB Streams to share the transactions data with other applications.",
        "is_correct": false
      },
      {
        "content": "Stream the transactions data into Amazon Kinesis Data Firehose to store data in Amazon DynamoDB and Amazon S3. Use AWS Lambda integration with Kinesis Data Firehose to remove sensitive data. Other applications can consume the data stored in Amazon S3.",
        "is_correct": false
      },
      {
        "content": "Stream the transactions data into Amazon Kinesis Data Streams. Use AWS Lambda integration to remove sensitive data from every transaction and then store the transactions data in Amazon DynamoDB. Other applications can consume the transactions data off the Kinesis data stream.",
        "is_correct": true
      },
      {
        "content": "Store the batched transactions data in Amazon S3 as files. Use AWS Lambda to process every file and remove sensitive data before updating the files in Amazon S3. The Lambda function then stores the data in Amazon DynamoDB. Other applications can consume transaction files stored in Amazon S3.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Firehose does not suppport DynamoDB and another key word is 'data' Kinesis Data Streams is the correct choice. Pay attention to key words. AWS likes to trick you up to make sure you know the services.<br><br>The tricky phrase is 'near-real-time solution', pointing to Firehouse, but it can't send data to DynamoDB, Lambda can.<br><br>There isn't a rule in DynamoDB itself that could remove PII."
    }
  },
  {
    "content": "A company hosts its multi-tier applications on AWS. For compliance, governance, auditing, and security, the company must track configuration changes on its AWS resources and record a history of API calls made to these resources.<br><br> What should a solutions architect do to meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use AWS CloudTrail to track configuration changes and AWS Config to record API calls.",
        "is_correct": false
      },
      {
        "content": "Use AWS Config to track configuration changes and AWS CloudTrail to record API calls.",
        "is_correct": true
      },
      {
        "content": "Use AWS Config to track configuration changes and Amazon CloudWatch to record API calls.",
        "is_correct": false
      },
      {
        "content": "Use AWS CloudTrail to track configuration changes and Amazon CloudWatch to record API calls.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "CloudTrail - Track user activity and API call history. <br><br>  Config - Assess, audits, and evaluates the configuration and relationships of tag resources."
    }
  },
  {
    "content": "A company is preparing to launch a public-facing web application in the AWS Cloud. The architecture consists of Amazon EC2 instances within a VPC behind an Elastic Load Balancer (ELB). A third-party service is used for the DNS. The company's solutions architect must recommend a solution to detect and protect against large-scale DDoS attacks.<br><br>Which solution meets these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Enable Amazon GuardDuty on the account.",
        "is_correct": false
      },
      {
        "content": "Enable Amazon Inspector on the EC2 instances.",
        "is_correct": false
      },
      {
        "content": "Enable AWS Shield and assign Amazon Route 53 to it.",
        "is_correct": false
      },
      {
        "content": "Enable AWS Shield Advanced and assign the ELB to it.",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "AWS Shield is a service that provides DDoS protection for your AWS resources. There are two tiers of AWS Shield: AWS Shield Standard and AWS Shield Advanced. AWS Shield Standard is included with all AWS accounts at no additional cost and provides protection against most common network and transport layer DDoS attacks. AWS Shield Advanced provides additional protection against more complex and larger scale DDoS attacks, as well as access to a team of DDoS response experts.<br><br>To detect and protect against large-scale DDoS attacks on a public-facing web application hosted on Amazon EC2 instances behind an Elastic Load Balancer (ELB), you should enable AWS Shield Advanced and assign the ELB to it. This will provide advanced protection against DDoS attacks targeting the ELB and the EC2 instances behind it."
    }
  },
  {
    "content": "A company is building an application in the AWS Cloud. The application will store data in Amazon S3 buckets in two AWS Regions. The company must use an AWS Key Management Service (AWS KMS) customer managed key to encrypt all data that is stored in the S3 buckets. The data in both S3 buckets must be encrypted and decrypted with the same KMS key. The data and the key must be stored in each of the two Regions.<br><br>Which solution will meet these requirements with the LEAST operational overhead?",
    "widget": "CI",
    "answers": [
      {
        "content": "Create an S3 bucket in each Region. Configure the S3 buckets to use server-side encryption with Amazon S3 managed encryption keys (SSE-S3). Configure replication between the S3 buckets.",
        "is_correct": false
      },
      {
        "content": "Create a customer managed multi-Region KMS key. Create an S3 bucket in each Region. Configure replication between the S3 buckets. Configure the application to use the KMS key with client-side encryption. ",
        "is_correct": true
      },
      {
        "content": "Create a customer managed KMS key and an S3 bucket in each Region. Configure the S3 buckets to use server-side encryption with Amazon S3 managed encryption keys (SSE-S3). Configure replication between the S3 buckets.",
        "is_correct": false
      },
      {
        "content": "Create a customer managed KMS key and an S3 bucket in each Region. Configure the S3 buckets to use server-side encryption with AWS KMS keys (SSE-KMS). Configure replication between the S3 buckets.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Cannot be SSE-S3 - question says customer managed key.<br><br>The data in both S3 buckets must be encrypted and decrypted with the same KMS key. SSE-KMS without Multi-Region creates KMS key in each region, which means to create two key in total.<br><br>KMS Multi-region keys are required. See [docs](https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html)."
    }
  },
  {
    "content": "A company recently launched a variety of new workloads on Amazon EC2 instances in its AWS account. The company needs to create a strategy to access and administer the instances remotely and securely. The company needs to implement a repeatable process that works with native AWS services and follows the AWS Well-Architected Framework.<br><br>  Which solution will meet these requirements with the LEAST operational overhead?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use the EC2 serial console to directly access the terminal interface of each instance for administration.",
        "is_correct": false
      },
      {
        "content": "Attach the appropriate IAM role to each existing instance and new instance. Use AWS Systems Manager Session Manager to establish a remote SSH session.",
        "is_correct": true
      },
      {
        "content": "Create an administrative SSH key pair. Load the public key into each EC2 instance. Deploy a bastion host in a public subnet to provide a tunnel for administration of each instance.",
        "is_correct": false
      },
      {
        "content": "Establish an AWS Site-to-Site VPN connection. Instruct administrators to use their local on-premises machines to connect directly to the instances by using SSH keys across the VPN tunnel.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "It's either B or C, but B requires less operational overhead (just attaching the IAM role), so I'd pick B. In real world scenario C seems to be most common solution thought."
    }
  },
  {
    "content": "A company is hosting a static website on Amazon S3 and is using Amazon Route 53 for DNS. The website is experiencing increased demand from around the world. The company must decrease latency for users who access the website.<br><br>Which solution meets these requirements MOST cost-effectively?",
    "widget": "CI",
    "answers": [
      {
        "content": "Replicate the S3 bucket that contains the website to all AWS Regions. Add Route 53 geolocation routing entries.",
        "is_correct": false
      },
      {
        "content": "Provision accelerators in AWS Global Accelerator. Associate the supplied IP addresses with the S3 bucket. Edit the Route 53 entries to point to the IP addresses of the accelerators.",
        "is_correct": false
      },
      {
        "content": "Add an Amazon CloudFront distribution in front of the S3 bucket. Edit the Route 53 entries to point to the CloudFront distribution.",
        "is_correct": true
      },
      {
        "content": "Enable S3 Transfer Acceleration on the bucket. Edit the Route 53 entries to point to the new endpoint.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": ""
    }
  },
  {
    "content": "A company maintains a searchable repository of items on its website. The data is stored in an Amazon RDS for MySQL database table that contains more than 10 million rows. The database has 2 TB of General Purpose SSD storage. There are millions of updates against this data every day through the company's website.<br><br>The company has noticed that some insert operations are taking 10 seconds or longer. The company has determined that the database storage performance is the problem.<br><br>Which solution addresses this performance issue?",
    "widget": "CI",
    "answers": [
      {
        "content": "Change the storage type to Provisioned IOPS SSD.",
        "is_correct": true
      },
      {
        "content": "Change the DB instance to a memory optimized instance class.",
        "is_correct": false
      },
      {
        "content": "Change the DB instance to a burstable performance instance class.",
        "is_correct": false
      },
      {
        "content": "Enable Multi-AZ RDS read replicas with MySQL native asynchronous replication.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "A: IOPS Provisioned IOPS – Provisioned IOPS storage is designed to meet the needs of I/O-intensive workloads, particularly database workloads, that require low I/O latency and consistent I/O throughput.<br><br>See [docs](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html)."
    }
  },
  {
    "content": "A company has thousands of edge devices that collectively generate 1 TB of status alerts each day. Each alert is approximately 2 KB in size. A solutions architect needs to implement a solution to ingest and store the alerts for future analysis.<br><br>The company wants a highly available solution. However, the company needs to minimize costs and does not want to manage additional infrastructure. Additionally, the company wants to keep 14 days of data available for immediate analysis and archive any data older than 14 days.<br><br>What is the MOST operationally efficient solution that meets these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Create an Amazon Kinesis Data Firehose delivery stream to ingest the alerts. Configure the Kinesis Data Firehose stream to deliver the alerts to an Amazon S3 bucket. Set up an S3 Lifecycle configuration to transition data to Amazon S3 Glacier after 14 days.",
        "is_correct": true
      },
      {
        "content": "Launch Amazon EC2 instances across two Availability Zones and place them behind an Elastic Load Balancer to ingest the alerts. Create a script on the EC2 instances that will store the alerts in an Amazon S3 bucket. Set up an S3 Lifecycle configuration to transition data to Amazon S3 Glacier after 14 days.",
        "is_correct": false
      },
      {
        "content": "Create an Amazon Kinesis Data Firehose delivery stream to ingest the alerts. Configure the Kinesis Data Firehose stream to deliver the alerts to an Amazon OpenSearch Service (Amazon Elasticsearch Service) cluster. Set up the Amazon OpenSearch Service (Amazon Elasticsearch Service) cluster to take manual snapshots every day and delete data from the cluster that is older than 14 days.",
        "is_correct": false
      },
      {
        "content": "Create an Amazon Simple Queue Service (Amazon SQS) standard queue to ingest the alerts, and set the message retention period to 14 days. Configure consumers to poll the SQS queue, check the age of the message, and analyze the message data as needed. If the message is 14 days old, the consumer should copy the message to an Amazon S3 bucket and delete the message from the SQS queue.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Definitely A, it's the most operationally efficient compared to D, which requires a lot of code and infrastructure to maintain. A is mostly managed (firehose is fully managed and S3 lifecycles are also managed).<br><br>  If you think D, just consider what is needed to move the message from SQS to S3... you are polling daily 14 TB to take out 1 TB... that's no operationally efficient at all."
    }
  },
  {
    "content": "A company's application integrates with multiple software-as-a-service (SaaS) sources for data collection. The company runs Amazon EC2 instances to receive the data and to upload the data to an Amazon S3 bucket for analysis. The same EC2 instance that receives and uploads the data also sends a notification to the user when an upload is complete. The company has noticed slow application performance and wants to improve the performance as much as possible.<br><br>Which solution will meet these requirements with the LEAST operational overhead?",
    "widget": "CI",
    "answers": [
      {
        "content": "Create an Auto Scaling group so that EC2 instances can scale out. Configure an S3 event notification to send events to an Amazon Simple Notification Service (Amazon SNS) topic when the upload to the S3 bucket is complete.",
        "is_correct": false
      },
      {
        "content": "Create an Amazon AppFlow flow to transfer data between each SaaS source and the S3 bucket. Configure an S3 event notification to send events to an Amazon Simple Notification Service (Amazon SNS) topic when the upload to the S3 bucket is complete.",
        "is_correct": true
      },
      {
        "content": "Create an Amazon EventBridge (Amazon CloudWatch Events) rule for each SaaS source to send output data. Configure the S3 bucket as the rule's target. Create a second EventBridge (Cloud Watch Events) rule to send events when the upload to the S3 bucket is complete. Configure an Amazon Simple Notification Service (Amazon SNS) topic as the second rule's target.",
        "is_correct": false
      },
      {
        "content": "Create a Docker container to use instead of an EC2 instance. Host the containerized application on Amazon Elastic Container Service (Amazon ECS). Configure Amazon CloudWatch Container Insights to send events to an Amazon Simple Notification Service (Amazon SNS) topic when the upload to the S3 bucket is complete.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Appflow works very well with SaaS platforms, makes a lot more sense in this scenario. Using an ASG might improve the performance, but here it asks for THE BEST PERFORMANCE, hence ASG might not fix the underlying issue in an efficient manner. "
    }
  },
  {
    "content": "A company runs a highly available image-processing application on Amazon EC2 instances in a single VPC. The EC2 instances run inside several subnets across multiple Availability Zones. The EC2 instances do not communicate with each other. However, the EC2 instances download images from Amazon S3 and upload images to Amazon S3 through a single NAT gateway. The company is concerned about data transfer charges.<br><br>What is the MOST cost-effective way for the company to avoid Regional data transfer charges?",
    "widget": "CI",
    "answers": [
      {
        "content": "Launch the NAT gateway in each Availability Zone.",
        "is_correct": false
      },
      {
        "content": "Replace the NAT gateway with a NAT instance.",
        "is_correct": false
      },
      {
        "content": "Deploy a gateway VPC endpoint for Amazon S3.",
        "is_correct": true
      },
      {
        "content": "Provision an EC2 Dedicated Host to run the EC2 instances.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "This link clearly states that \"VPC gateway endpoints allow communication to Amazon S3 and Amazon DynamoDB without incurring data transfer charges within the same Region\". On the other hand NAT gateway incurs additional data processing charges. Hence, C is the correct answer. <br><br>  See [docs](https://aws.amazon.com/blogs/architecture/overview-of-data-transfer-costs-for-common-architectures/)"
    }
  },
  {
    "content": "A company has an on-premises application that generates a large amount of time-sensitive data that is backed up to Amazon S3. The application has grown and there are user complaints about internet bandwidth limitations. A solutions architect needs to design a long-term solution that allows for both timely backups to Amazon S3 and with minimal impact on internet connectivity for internal users.<br><br>Which solution meets these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Establish AWS VPN connections and proxy all traffic through a VPC gateway endpoint.",
        "is_correct": false
      },
      {
        "content": "Establish a new AWS Direct Connect connection and direct backup traffic through this new connection.",
        "is_correct": true
      },
      {
        "content": "Order daily AWS Snowball devices. Load the data onto the Snowball devices and return the devices to AWS each day.",
        "is_correct": false
      },
      {
        "content": "Submit a support ticket through the AWS Management Console. Request the removal of S3 service limits from the account.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "VPN also goes through the internet and uses the bandwidth.<br><br> Daily Snowball transfer is not really a long-term solution when it comes to cost and efficiency.<br><br>  S3 limits don't change anything here So the answer is Direct Connect.<br><br>  The keyword here is **long term solution**. Direct connect is a dedicated connection between on-prem and AWS, this is the way to ensure stable network connectivity that will not wax and wane like internet connectivity."
    }
  },
  {
    "content": "A company has an Amazon S3 bucket that contains critical data. The company must protect the data from accidental deletion.<br><br>Which combination of steps should a solutions architect take to meet these requirements? (Choose two.)",
    "widget": "CM",
    "answers": [
      {
        "content": "Enable versioning on the S3 bucket.",
        "is_correct": true
      },
      {
        "content": "Enable MFA Delete on the S3 bucket.",
        "is_correct": true
      },
      {
        "content": "Create a bucket policy on the S3 bucket.",
        "is_correct": false
      },
      {
        "content": "Enable default encryption on the S3 bucket.",
        "is_correct": false
      },
      {
        "content": "Create a lifecycle policy for the objects in the S3 bucket.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": ""
    }
  },
  {
    "content": "A company has a data ingestion workflow that consists of the following:<br><br>  • An Amazon Simple Notification Service (Amazon SNS) topic for notifications about new data deliveries.<br><br>  • An AWS Lambda function to process the data and record metadata.<br><br>  The company observes that the ingestion workflow fails occasionally because of network connectivity issues. When such a failure occurs, the Lambda function does not ingest the corresponding data unless the company manually reruns the job.<br><br>Which combination of actions should a solutions architect take to ensure that the Lambda function ingests all data in the future? (Choose two.)",
    "widget": "CM",
    "answers": [
      {
        "content": "Deploy the Lambda function in multiple Availability Zones.",
        "is_correct": false
      },
      {
        "content": "Create an Amazon Simple Queue Service (Amazon SQS) queue, and subscribe it to the SNS topic.",
        "is_correct": true
      },
      {
        "content": "Increase the CPU and memory that are allocated to the Lambda function.",
        "is_correct": false
      },
      {
        "content": "Increase provisioned throughput for the Lambda function.",
        "is_correct": false
      },
      {
        "content": "Modify the Lambda function to read from an Amazon Simple Queue Service (Amazon SQS) queue. ",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "A, C, D options are out, since Lambda is fully managed service which provides high availability and scalability by its own.<br><br>  B and E is the obvious answer here, SQS ensures that message does not get lost.<br><br>  Why not A? lambda is serverless, it does not need to be multi-AZ."
    }
  },
  {
    "content": "A company has an application that provides marketing services to stores. The services are based on previous purchases by store customers. The stores upload transaction data to the company through SFTP, and the data is processed and analyzed to generate new marketing offers. Some of the files can exceed 200 GB in size.<br><br>Recently, the company discovered that some of the stores have uploaded files that contain personally identifiable information (PII) that should not have been included. The company wants administrators to be alerted if PII is shared again. The company also wants to automate remediation.<br><br>  What should a solutions architect do to meet these requirements with the LEAST development effort?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use an Amazon S3 bucket as a secure transfer point. Use Amazon Inspector to scan the objects in the bucket. If objects contain PII, trigger an S3 Lifecycle policy to remove the objects that contain PII.",
        "is_correct": false
      },
      {
        "content": "Use an Amazon S3 bucket as a secure transfer point. Use Amazon Macie to scan the objects in the bucket. If objects contain PII, use Amazon Simple Notification Service (Amazon SNS) to trigger a notification to the administrators to remove the objects that contain PII.",
        "is_correct": true
      },
      {
        "content": "Implement custom scanning algorithms in an AWS Lambda function. Trigger the function when objects are loaded into the bucket. If objects contain PII, use Amazon Simple Notification Service (Amazon SNS) to trigger a notification to the administrators to remove the objects that contain PII.",
        "is_correct": false
      },
      {
        "content": "Implement custom scanning algorithms in an AWS Lambda function. Trigger the function when objects are loaded into the bucket. If objects contain PII, use Amazon Simple Email Service (Amazon SES) to trigger a notification to the administrators and trigger an S3 Lifecycle policy to remove the meats that contain PII.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Macie automatically detects a large and growing list of sensitive data types, including personally identifiable information (PII) such as names, addresses, and credit card numbers. It also gives you constant visibility of the data security and data privacy of your data stored in Amazon S3 "
    }
  },
  {
    "content": "A company needs guaranteed Amazon EC2 capacity in three specific Availability Zones in a specific AWS Region for an upcoming event that will last 1 week.<br><br>What should the company do to guarantee the EC2 capacity?",
    "widget": "CI",
    "answers": [
      {
        "content": "Purchase Reserved Instances that specify the Region needed.",
        "is_correct": false
      },
      {
        "content": "Create an On-Demand Capacity Reservation that specifies the Region needed.",
        "is_correct": false
      },
      {
        "content": "Purchase Reserved Instances that specify the Region and three Availability Zones needed.",
        "is_correct": false
      },
      {
        "content": "Create an On-Demand Capacity Reservation that specifies the Region and three Availability Zones needed.",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": ""
    }
  },
  {
    "content": "A company's website uses an Amazon EC2 instance store for its catalog of items. The company wants to make sure that the catalog is highly available and that the catalog is stored in a durable location.<br><br>What should a solutions architect do to meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Move the catalog to Amazon ElastiCache for Redis.",
        "is_correct": false
      },
      {
        "content": "Deploy a larger EC2 instance with a larger instance store.",
        "is_correct": false
      },
      {
        "content": "Move the catalog from the instance store to Amazon S3 Glacier Deep Archive.",
        "is_correct": false
      },
      {
        "content": "Move the catalog to an Amazon Elastic File System (Amazon EFS) file system.",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "Keyword is \"durable\" location. ElastiCache and Instance Store are ephemeral storage. S3 Glacier Deep Archive is durable but not highly available so is not DA."
    }
  },
  {
    "content": "A company stores call transcript files on a monthly basis. Users access the files randomly within 1 year of the call, but users access the files infrequently after 1 year. The company wants to optimize its solution by giving users the ability to query and retrieve files that are less than 1-year-old as quickly as possible. A delay in retrieving older files is acceptable.<br><br>Which solution will meet these requirements MOST cost-effectively?",
    "widget": "CI",
    "answers": [
      {
        "content": "Store individual files with tags in Amazon S3 Glacier Instant Retrieval. Query the tags to retrieve the files from S3 Glacier Instant Retrieval.",
        "is_correct": false
      },
      {
        "content": "Store individual files in Amazon S3 Intelligent-Tiering. Use S3 Lifecycle policies to move the files to S3 Glacier Flexible Retrieval after 1 year. Query and retrieve the files that are in Amazon S3 by using Amazon Athena. Query and retrieve the files that are in S3 Glacier by using S3 Glacier Select.",
        "is_correct": true
      },
      {
        "content": "Store individual files with tags in Amazon S3 Standard storage. Store search metadata for each archive in Amazon S3 Standard storage. Use S3 Lifecycle policies to move the files to S3 Glacier Instant Retrieval after 1 year. Query and retrieve the files by searching for metadata from Amazon S3.",
        "is_correct": false
      },
      {
        "content": "Store individual files in Amazon S3 Standard storage. Use S3 Lifecycle policies to move the files to S3 Glacier Deep Archive after 1 year. Store search metadata in Amazon RDS. Query the files from Amazon RDS. Retrieve the files from S3 Glacier Deep Archive.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Uses Glacier Instant Retreival but the put/get costs are more than S3 standard.<br><br>Solution with RDS should be ruled out - they are using RDS which may incur additional costs compared to other options."
    }
  },
  {
    "content": "A company has a production workload that runs on 1,000 Amazon EC2 Linux instances. The workload is powered by third-party software. The company needs to patch the third-party software on all EC2 instances as quickly as possible to remediate a critical security vulnerability.<br><br>What should a solutions architect do to meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Create an AWS Lambda function to apply the patch to all EC2 instances.",
        "is_correct": false
      },
      {
        "content": "Configure AWS Systems Manager Patch Manager to apply the patch to all EC2 instances.",
        "is_correct": false
      },
      {
        "content": "Schedule an AWS Systems Manager maintenance window to apply the patch to all EC2 instances.",
        "is_correct": false
      },
      {
        "content": "Use AWS Systems Manager Run Command to run a custom command that applies the patch to all EC2 instances. ",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "It's not Patch Manager for sure since you have to path 3rd party software and Systems Manager Patch Manager just works for OS owned software.<br><br>Question says as quickly as possible, 'maintenance window' is not the best solution here."
    }
  },
  {
    "content": "A company is developing an application that provides order shipping statistics for retrieval by a REST API. The company wants to extract the shipping statistics, organize the data into an easy-to-read HTML format, and send the report to several email addresses at the same time every morning.<br><br>Which combination of steps should a solutions architect take to meet these requirements? (Choose two.)",
    "widget": "CM",
    "answers": [
      {
        "content": "Configure the application to send the data to Amazon Kinesis Data Firehose.",
        "is_correct": false
      },
      {
        "content": "Use Amazon Simple Email Service (Amazon SES) to format the data and to send the report by email.",
        "is_correct": true
      },
      {
        "content": "Create an Amazon EventBridge (Amazon CloudWatch Events) scheduled event that invokes an AWS Glue job to query the application's API for the data.",
        "is_correct": false
      },
      {
        "content": "Create an Amazon EventBridge (Amazon CloudWatch Events) scheduled event that invokes an AWS Lambda function to query the application's API for the data.",
        "is_correct": true
      },
      {
        "content": "Store the application data in Amazon S3. Create an Amazon Simple Notification Service (Amazon SNS) topic as an S3 event destination to send the report by email.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Not EventBridge=>Glue because there is no direct connector available for Glue to connect to the internet world (REST API), you can set up a VPC, with a public and a private subnet. Furthermore, Glue cannot output HTML Report, you'll need a Lambda."
    }
  },
  {
    "content": "A company wants to migrate its on-premises application to AWS. The application produces output files that vary in size from tens of gigabytes to hundreds of terabytes. The application data must be stored in a standard file system structure. The company wants a solution that scales automatically. is highly available, and requires minimum operational overhead.<br><br>Which solution will meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Migrate the application to run as containers on Amazon Elastic Container Service (Amazon ECS). Use Amazon S3 for storage.",
        "is_correct": false
      },
      {
        "content": "Migrate the application to run as containers on Amazon Elastic Kubernetes Service (Amazon EKS). Use Amazon Elastic Block Store (Amazon EBS) for storage.",
        "is_correct": false
      },
      {
        "content": "Migrate the application to Amazon EC2 instances in a Multi-AZ Auto Scaling group. Use Amazon Elastic File System (Amazon EFS) for storage.",
        "is_correct": true
      },
      {
        "content": "Migrate the application to Amazon EC2 instances in a Multi-AZ Auto Scaling group. Use Amazon Elastic Block Store (Amazon EBS) for storage.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "EBS doesn't offer high availability, data is stored in one AZ.<br><br>  Standard file system => EFS rather than S3."
    }
  },
  {
    "content": "A company needs to store its accounting records in Amazon S3. The records must be immediately accessible for 1 year and then must be archived for an additional 9 years. No one at the company, including administrative users and root users, can be able to delete the records during the entire 10-year period. The records must be stored with maximum resiliency.<br><br>Which solution will meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Store the records in S3 Glacier for the entire 10-year period. Use an access control policy to deny deletion of the records for a period of 10 years.",
        "is_correct": false
      },
      {
        "content": "Store the records by using S3 Intelligent-Tiering. Use an IAM policy to deny deletion of the records. After 10 years, change the IAM policy to allow deletion.",
        "is_correct": false
      },
      {
        "content": "Use an S3 Lifecycle policy to transition the records from S3 Standard to S3 Glacier Deep Archive after 1 year. Use S3 Object Lock in compliance mode for a period of 10 years.",
        "is_correct": true
      },
      {
        "content": "Use an S3 Lifecycle policy to transition the records from S3 Standard to S3 One Zone-Infrequent Access (S3 One Zone-IA) after 1 year. Use S3 Object Lock in governance mode for a period of 10 years.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Glacier - Wrong as the records must be immediately accessble for the first year.<br><br>'After 10 years, change the IAM policy to allow deletion.' - The question never mentioned about the records can be deleted or modified after 10-year period.<br><br>  S3 One Zone IA - It does not fulfill the condition of securing resiliency; you need multi-AZ to guarantee it. Compliance lock can't be removed unlike governance."
    }
  },
  {
    "content": "A company runs multiple Windows workloads on AWS. The company's employees use Windows file shares that are hosted on two Amazon EC2 instances. The file shares synchronize data between themselves and maintain duplicate copies. The company wants a highly available and durable storage solution that preserves how users currently access the files.<br><br>What should a solutions architect do to meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Migrate all the data to Amazon S3. Set up IAM authentication for users to access files.",
        "is_correct": false
      },
      {
        "content": "Set up an Amazon S3 File Gateway. Mount the S3 File Gateway on the existing EC2 instances.",
        "is_correct": false
      },
      {
        "content": "Extend the file share environment to Amazon FSx for Windows File Server with a Multi-AZ configuration. Migrate all the data to FSx for Windows File Server.",
        "is_correct": true
      },
      {
        "content": "Extend the file share environment to Amazon Elastic File System (Amazon EFS) with a Multi-AZ configuration. Migrate all the data to Amazon EFS.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "EFS is only for Linux.<br><br>  Windows file shares = Amazon FSx for Windows File Server."
    }
  },
  {
    "content": "A solutions architect is developing a VPC architecture that includes multiple subnets. The architecture will host applications that use Amazon EC2 instances and Amazon RDS DB instances. The architecture consists of six subnets in two Availability Zones. Each Availability Zone includes a public subnet, a private subnet, and a dedicated subnet for databases. Only EC2 instances that run in the private subnets can have access to the RDS databases.<br><br>Which solution will meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Create a new route table that excludes the route to the public subnets' CIDR blocks. Associate the route table with the database subnets.",
        "is_correct": false
      },
      {
        "content": "Create a security group that denies inbound traffic from the security group that is assigned to instances in the public subnets. Attach the security group to the DB instances.",
        "is_correct": false
      },
      {
        "content": "Create a security group that allows inbound traffic from the security group that is assigned to instances in the private subnets. Attach the security group to the DB instances.",
        "is_correct": true
      },
      {
        "content": "Create a new peering connection between the public subnets and the private subnets. Create a different peering connection between the private subnets and the database subnets.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "New RT doesn't fully configure the traffic flow.<br><br>Security groups don't have deny rules.<br><br>New peering is mostly between VPCs, doesn't really help here."
    }
  },
  {
    "content": "A company has registered its domain name with Amazon Route 53. The company uses Amazon API Gateway in the ca-central-1 Region as a public interface for its backend microservice APIs. Third-party services consume the APIs securely. The company wants to design its API Gateway URL with the company's domain name and corresponding certificate so that the third-party services can use HTTPS.<br><br>Which solution will meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Create stage variables in API Gateway with Name=\"Endpoint-URL\" and Value=\"Company Domain Name\" to overwrite the default URL. Import the public certificate associated with the company's domain name into AWS Certificate Manager (ACM).",
        "is_correct": false
      },
      {
        "content": "Create Route 53 DNS records with the company's domain name. Point the alias record to the Regional API Gateway stage endpoint. Import the public certificate associated with the company's domain name into AWS Certificate Manager (ACM) in the us-east-1 Region.",
        "is_correct": false
      },
      {
        "content": "Create a Regional API Gateway endpoint. Associate the API Gateway endpoint with the company's domain name. Import the public certificate associated with the company's domain name into AWS Certificate Manager (ACM) in the same Region. Attach the certificate to the API Gateway endpoint. Configure Route 53 to route traffic to the API Gateway endpoint.",
        "is_correct": true
      },
      {
        "content": "Create a Regional API Gateway endpoint. Associate the API Gateway endpoint with the company's domain name. Import the public certificate associated with the company's domain name into AWS Certificate Manager (ACM) in the us-east-1 Region. Attach the certificate to the API Gateway APIs. Create Route 53 DNS records with the company's domain name. Point an A record to the company's domain name.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Will change my earlier selection to ACM in the same region). Reason:<br><br>  • If using Edge-Optimized endpoint, then the certificate must be in us-east-1.<br><br>  • If using Regional endpoint, the certificate must be in the API Gateway region.<br><br>  Answer is: _Regional custom domain names must use an SSL/TLS certificate that's in the same AWS Region as your API_."
    }
  },
  {
    "content": "A company is running a popular social media website. The website gives users the ability to upload images to share with other users. The company wants to make sure that the images do not contain inappropriate content. The company needs a solution that minimizes development effort.<br><br>What should a solutions architect do to meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use Amazon Comprehend to detect inappropriate content. Use human review for low-confidence predictions.",
        "is_correct": false
      },
      {
        "content": "Use Amazon Rekognition to detect inappropriate content. Use human review for low-confidence predictions.",
        "is_correct": true
      },
      {
        "content": "Use Amazon SageMaker to detect inappropriate content. Use ground truth to label low-confidence predictions.",
        "is_correct": false
      },
      {
        "content": "Use AWS Fargate to deploy a custom machine learning model to detect inappropriate content. Use ground truth to label low-confidence predictions.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Amazon Rekognition is directly integrated with Amazon A2I so that you can easily implement human review for the use case of detecting unsafe images. Amazon A2I provides a human review workflow for image moderation. This enables you to easily review predictions from Amazon Rekognition. "
    }
  },
  {
    "content": "A company wants to run its critical applications in containers to meet requirements for scalability and availability. The company prefers to focus on maintenance of the critical applications. The company does not want to be responsible for provisioning and managing the underlying infrastructure that runs the containerized workload.<br><br>What should a solutions architect do to meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use Amazon EC2 instances, and install Docker on the instances.",
        "is_correct": false
      },
      {
        "content": "Use Amazon Elastic Container Service (Amazon ECS) on Amazon EC2 worker nodes.",
        "is_correct": false
      },
      {
        "content": "Use Amazon Elastic Container Service (Amazon ECS) on AWS Fargate.",
        "is_correct": true
      },
      {
        "content": "Use Amazon EC2 instances from an Amazon Elastic Container Service (Amazon ECS)-optimized Amazon Machine Image (AMI).",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Fargate is serverless, no need to manage the underlying infrastructure. "
    }
  },
  {
    "content": "A company hosts more than 300 global websites and applications. The company requires a platform to analyze more than 30 TB of clickstream data each day.<br><br>What should a solutions architect do to transmit and process the clickstream data?",
    "widget": "CI",
    "answers": [
      {
        "content": "Design an AWS Data Pipeline to archive the data to an Amazon S3 bucket and run an Amazon EMR cluster with the data to generate analytics.",
        "is_correct": false
      },
      {
        "content": "Create an Auto Scaling group of Amazon EC2 instances to process the data and send it to an Amazon S3 data lake for Amazon Redshift to use for analysis.",
        "is_correct": false
      },
      {
        "content": "Cache the data to Amazon CloudFront. Store the data in an Amazon S3 bucket. When an object is added to the S3 bucket. run an AWS Lambda function to process the data for analysis.",
        "is_correct": false
      },
      {
        "content": "Collect the data from Amazon Kinesis Data Streams. Use Amazon Kinesis Data Firehose to transmit the data to an Amazon S3 data lake. Load the data in Amazon Redshift for analysis. ",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "Click Stream & Analyse/ process- Think KDS, "
    }
  },
  {
    "content": "A company has a website hosted on AWS. The website is behind an Application Load Balancer (ALB) that is configured to handle HTTP and HTTPS separately. The company wants to forward all requests to the website so that the requests will use HTTPS.<br><br>What should a solutions architect do to meet this requirement?",
    "widget": "CI",
    "answers": [
      {
        "content": "Update the ALB's network ACL to accept only HTTPS traffic.",
        "is_correct": false
      },
      {
        "content": "Create a rule that replaces the HTTP in the URL with HTTPS.",
        "is_correct": false
      },
      {
        "content": "Create a listener rule on the ALB to redirect HTTP traffic to HTTPS.",
        "is_correct": true
      },
      {
        "content": "Replace the ALB with a Network Load Balancer configured to use Server Name Indication (SNI).",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "See [docs](https://docs.aws.amazon.com/fr_fr/elasticloadbalancing/latest/application/create-https-listener.html https://aws.amazon.com/fr/premiumsupport/knowledge-center/elb-redirect-http-to-https-using-alb/)."
    }
  },
  {
    "content": "A company is developing a two-tier web application on AWS. The company's developers have deployed the application on an Amazon EC2 instance that connects directly to a backend Amazon RDS database. The company must not hardcode database credentials in the application. The company must also implement a solution to automatically rotate the database credentials on a regular basis.<br><br>Which solution will meet these requirements with the LEAST operational overhead?",
    "widget": "CI",
    "answers": [
      {
        "content": "Store the database credentials in the instance metadata. Use Amazon EventBridge (Amazon CloudWatch Events) rules to run a scheduled AWS Lambda function that updates the RDS credentials and instance metadata at the same time.",
        "is_correct": false
      },
      {
        "content": "Store the database credentials in a configuration file in an encrypted Amazon S3 bucket. Use Amazon EventBridge (Amazon CloudWatch Events) rules to run a scheduled AWS Lambda function that updates the RDS credentials and the credentials in the configuration file at the same time. Use S3 Versioning to ensure the ability to fall back to previous values.",
        "is_correct": false
      },
      {
        "content": "Store the database credentials as a secret in AWS Secrets Manager. Turn on automatic rotation for the secret. Attach the required permission to the EC2 role to grant access to the secret.",
        "is_correct": true
      },
      {
        "content": "Store the database credentials as encrypted parameters in AWS Systems Manager Parameter Store. Turn on automatic rotation for the encrypted parameters. Attach the required permission to the EC2 role to grant access to the encrypted parameters.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Secrets manager supports Autorotation unlike Parameter store. "
    }
  },
  {
    "content": "A company is deploying a new public web application to AWS. The application will run behind an Application Load Balancer (ALB). The application needs to be encrypted at the edge with an SSL/TLS certificate that is issued by an external certificate authority (CA). The certificate must be rotated each year before the certificate expires.<br><br>What should a solutions architect do to meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use AWS Certificate Manager (ACM) to issue an SSL/TLS certificate. Apply the certificate to the ALB. Use the managed renewal feature to automatically rotate the certificate.",
        "is_correct": false
      },
      {
        "content": "Use AWS Certificate Manager (ACM) to issue an SSL/TLS certificate. Import the key material from the certificate. Apply the certificate to the ALUse the managed renewal feature to automatically rotate the certificate.",
        "is_correct": false
      },
      {
        "content": "Use AWS Certificate Manager (ACM) Private Certificate Authority to issue an SSL/TLS certificate from the root CA. Apply the certificate to the ALB. Use the managed renewal feature to automatically rotate the certificate.",
        "is_correct": false
      },
      {
        "content": "Use AWS Certificate Manager (ACM) to import an SSL/TLS certificate. Apply the certificate to the ALB. Use Amazon EventBridge (Amazon CloudWatch Events) to send a notification when the certificate is nearing expiration. Rotate the certificate manually.",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "It's a third-party certificate, hence AWS cannot manage renewal automatically. The closest thing you can do is to send a notification to renew the 3rd party certificate.<br><br>  It is the import option, because ACM does not manage the renewal process for imported certificates. You are responsible for monitoring the expiration date of your imported certificates and for renewing them before they expire."
    }
  },
  {
    "content": "A company runs its infrastructure on AWS and has a registered base of 700,000 users for its document management application. The company intends to create a product that converts large .pdf files to .jpg image files. The .pdf files average 5 MB in size. The company needs to store the original files and the converted files. A solutions architect must design a scalable solution to accommodate demand that will grow rapidly over time.<br><br>Which solution meets these requirements MOST cost-effectively?",
    "widget": "CI",
    "answers": [
      {
        "content": "Save the .pdf files to Amazon S3. Configure an S3 PUT event to invoke an AWS Lambda function to convert the files to .jpg format and store them back in Amazon S3.",
        "is_correct": true
      },
      {
        "content": "Save the .pdf files to Amazon DynamoDUse the DynamoDB Streams feature to invoke an AWS Lambda function to convert the files to .jpg format and store them back in DynamoDB.",
        "is_correct": false
      },
      {
        "content": "Upload the .pdf files to an AWS Elastic Beanstalk application that includes Amazon EC2 instances, Amazon Elastic Block Store (Amazon EBS) storage, and an Auto Scaling group. Use a program in the EC2 instances to convert the files to .jpg format. Save the .pdf files and the .jpg files in the EBS store.",
        "is_correct": false
      },
      {
        "content": "Upload the .pdf files to an AWS Elastic Beanstalk application that includes Amazon EC2 instances, Amazon Elastic File System (Amazon EFS) storage, and an Auto Scaling group. Use a program in the EC2 instances to convert the file to .jpg format. Save the .pdf files and the .jpg files in the EBS store.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "S3 is the correct solution. Elastic BeanStalk is expensive, and DocumentDB has a 400KB max to upload files. So Lambda and S3 should be the one.<br><br>  B is not correct because the maximum item size in DynamoDB is 400 KB."
    }
  },
  {
    "content": "A company has more than 5 TB of file data on Windows file servers that run on premises. Users and applications interact with the data each day.<br><br>The company is moving its Windows workloads to AWS. As the company continues this process, the company requires access to AWS and on-premises file storage with minimum latency. The company needs a solution that minimizes operational overhead and requires no significant changes to the existing file access patterns. The company uses an AWS Site-to-Site VPN connection for connectivity to AWS.<br><br>What should a solutions architect do to meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Deploy and configure Amazon FSx for Windows File Server on AWS. Move the on-premises file data to FSx for Windows File Server. Reconfigure the workloads to use FSx for Windows File Server on AWS.",
        "is_correct": false
      },
      {
        "content": "Deploy and configure an Amazon S3 File Gateway on premises. Move the on-premises file data to the S3 File Gateway. Reconfigure the on-premises workloads and the cloud workloads to use the S3 File Gateway.",
        "is_correct": false
      },
      {
        "content": "Deploy and configure an Amazon S3 File Gateway on premises. Move the on-premises file data to Amazon S3. Reconfigure the workloads to use either Amazon S3 directly or the S3 File Gateway. depending on each workload's location.",
        "is_correct": false
      },
      {
        "content": "Deploy and configure Amazon FSx for Windows File Server on AWS. Deploy and configure an Amazon FSx File Gateway on premises. Move the on-premises file data to the FSx File Gateway. Configure the cloud workloads to use FSx for Windows File Server on AWS. Configure the on-premises workloads to use the FSx File Gateway.",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "Windows File server == FSx. Since access from both on-prem and AWS is needed.<br><br>It has to work on-prem as well, so File Gateway is needed."
    }
  },
  {
    "content": "A hospital recently deployed a RESTful API with Amazon API Gateway and AWS Lambda. The hospital uses API Gateway and Lambda to upload reports that are in PDF format and JPEG format. The hospital needs to modify the Lambda code to identify protected health information (PHI) in the reports.<br><br>Which solution will meet these requirements with the LEAST operational overhead?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use existing Python libraries to extract the text from the reports and to identify the PHI from the extracted text.",
        "is_correct": false
      },
      {
        "content": "Use Amazon Textract to extract the text from the reports. Use Amazon SageMaker to identify the PHI from the extracted text.",
        "is_correct": false
      },
      {
        "content": "Use Amazon Textract to extract the text from the reports. Use Amazon Comprehend Medical to identify the PHI from the extracted text.",
        "is_correct": true
      },
      {
        "content": "Use Amazon Rekognition to extract the text from the reports. Use Amazon Comprehend Medical to identify the PHI from the extracted text.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": ""
    }
  },
  {
    "content": "A company has an application that generates a large number of files, each approximately 5 MB in size. The files are stored in Amazon S3. Company policy requires the files to be stored for 4 years before they can be deleted. Immediate accessibility is always required as the files contain critical business data that is not easy to reproduce. The files are frequently accessed in the first 30 days of the object creation but are rarely accessed after the first 30 days.<br><br>Which storage solution is MOST cost-effective?",
    "widget": "CI",
    "answers": [
      {
        "content": "Create an S3 bucket lifecycle policy to move files from S3 Standard to S3 Glacier 30 days from object creation. Delete the files 4 years after object creation.",
        "is_correct": false
      },
      {
        "content": "Create an S3 bucket lifecycle policy to move files from S3 Standard to S3 One Zone-Infrequent Access (S3 One Zone-IA) 30 days from object creation. Delete the files 4 years after object creation.",
        "is_correct": false
      },
      {
        "content": "Create an S3 bucket lifecycle policy to move files from S3 Standard to S3 Standard-Infrequent Access (S3 Standard-IA) 30 days from object creation. Delete the files 4 years after object creation.",
        "is_correct": true
      },
      {
        "content": "Create an S3 bucket lifecycle policy to move files from S3 Standard to S3 Standard-Infrequent Access (S3 Standard-IA) 30 days from object creation. Move the files to S3 Glacier 4 years after object creation.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Not Glacier, since immediate accessibility is always required."
    }
  },
  {
    "content": "A company hosts an application on multiple Amazon EC2 instances. The application processes messages from an Amazon SQS queue, writes to an Amazon RDS table, and deletes the message from the queue. Occasional duplicate records are found in the RDS table. The SQS queue does not contain any duplicate messages.<br><br>What should a solutions architect do to ensure messages are being processed once only?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use the CreateQueue API call to create a new queue.",
        "is_correct": false
      },
      {
        "content": "Use the AddPermission API call to add appropriate permissions.",
        "is_correct": false
      },
      {
        "content": "Use the ReceiveMessage API call to set an appropriate wait time.",
        "is_correct": false
      },
      {
        "content": "Use the ChangeMessageVisibility API call to increase the visibility timeout.",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "**ChangeMessageVisibility API call** is the correct choise, increasing the visibility timeout according to max time taken to process the message on the RDS.<br><br>  In case of SQS - multi-consumers if one consumer has already picked the message and is processing, in meantime other consumer can pick it up and process the message there by two copies are added at the end. To avoid this the message is made invisible from the time its picked and deleted after processing. This visibility timeout is increased according to max time taken to process the message."
    }
  },
  {
    "content": "A solutions architect is designing a new hybrid architecture to extend a company's on-premises infrastructure to AWS. The company requires a highly available connection with consistent low latency to an AWS Region. The company needs to minimize costs and is willing to accept slower traffic if the primary connection fails.<br><br>What should the solutions architect do to meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Provision an AWS Direct Connect connection to a Region. Provision a VPN connection as a backup if the primary Direct Connect connection fails.",
        "is_correct": true
      },
      {
        "content": "Provision a VPN tunnel connection to a Region for private connectivity. Provision a second VPN tunnel for private connectivity and as a backup if the primary VPN connection fails.",
        "is_correct": false
      },
      {
        "content": "Provision an AWS Direct Connect connection to a Region. Provision a second Direct Connect connection to the same Region as a backup if the primary Direct Connect connection fails.",
        "is_correct": false
      },
      {
        "content": "Provision an AWS Direct Connect connection to a Region. Use the Direct Connect failover attribute from the AWS CLI to automatically create a backup connection if the primary Direct Connect connection fails.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Direct Connect + VPN best of both.<br><br>  Direct Connect goes throught 1 Gbps, 10 Gbps or 100 Gbps and the VPN goes up to 1.25 Gbps."
    }
  },
  {
    "content": "A company is running a business-critical web application on Amazon EC2 instances behind an Application Load Balancer. The EC2 instances are in an Auto Scaling group. The application uses an Amazon Aurora PostgreSQL database that is deployed in a single Availability Zone. The company wants the application to be highly available with minimum downtime and minimum loss of data.<br><br>Which solution will meet these requirements with the LEAST operational effort?",
    "widget": "CI",
    "answers": [
      {
        "content": "Place the EC2 instances in different AWS Regions. Use Amazon Route 53 health checks to redirect traffic. Use Aurora PostgreSQL Cross-Region Replication.",
        "is_correct": false
      },
      {
        "content": "Configure the Auto Scaling group to use multiple Availability Zones. Configure the database as Multi-AZ. Configure an Amazon RDS Proxy instance for the database.",
        "is_correct": true
      },
      {
        "content": "Configure the Auto Scaling group to use one Availability Zone. Generate hourly snapshots of the database. Recover the database from the snapshots in the event of a failure.",
        "is_correct": false
      },
      {
        "content": "Configure the Auto Scaling group to use multiple AWS Regions. Write the data from the application to Amazon S3. Use S3 Event Notifications to launch an AWS Lambda function to write the data to the database.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": ""
    }
  },
  {
    "content": "A company's HTTP application is behind a Network Load Balancer (NLB). The NLB's target group is configured to use an Amazon EC2 Auto Scaling group with multiple EC2 instances that run the web service.<br><br>The company notices that the NLB is not detecting HTTP errors for the application. These errors require a manual restart of the EC2 instances that run the web service. The company needs to improve the application's availability without writing custom scripts or code.<br><br>What should a solutions architect do to meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Enable HTTP health checks on the NLB, supplying the URL of the company's application.",
        "is_correct": false
      },
      {
        "content": "Add a cron job to the EC2 instances to check the local application's logs once each minute. If HTTP errors are detected. the application will restart.",
        "is_correct": false
      },
      {
        "content": "Replace the NLB with an Application Load Balancer. Enable HTTP health checks by supplying the URL of the company's application. Configure an Auto Scaling action to replace unhealthy instances.",
        "is_correct": true
      },
      {
        "content": "Create an Amazon Cloud Watch alarm that monitors the UnhealthyHostCount metric for the NLB. Configure an Auto Scaling action to replace unhealthy instances when the alarm is in the ALARM state.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "NLB does not handle HTTP (layer 7) listerns errors only TCP (layer 4) listeners."
    }
  },
  {
    "content": "A company runs a shopping application that uses Amazon DynamoDB to store customer information. In case of data corruption, a solutions architect needs to design a solution that meets a recovery point objective (RPO) of 15 minutes and a recovery time objective (RTO) of 1 hour.<br><br>What should the solutions architect recommend to meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Configure DynamoDB global tables. For RPO recovery, point the application to a different AWS Region.",
        "is_correct": false
      },
      {
        "content": "Configure DynamoDB point-in-time recovery. For RPO recovery, restore to the desired point in time.",
        "is_correct": true
      },
      {
        "content": "Export the DynamoDB data to Amazon S3 Glacier on a daily basis. For RPO recovery, import the data from S3 Glacier to DynamoDB.",
        "is_correct": false
      },
      {
        "content": "Schedule Amazon Elastic Block Store (Amazon EBS) snapshots for the DynamoDB table every 15 minutes. For RPO recovery, restore the DynamoDB table by using the EBS snapshot.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "DynamoDB global tables provides multi-Region, and multi-active database, but it not valid \"in case of data corruption\". In this case, you need a backup. This solutions isn't valid.<br><br> _Point in Time Recovery_ is designed as a continuous backup juts to recover it fast. It covers perfectly the RPO, and probably the RTO. This fits the requirement. See [docs](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery.html).<br><br>A daily export will not cover the RPO of 15min.<br><br>DynamoDB is serverless... so what are these EBS snapshots taken from???"
    }
  },
  {
    "content": "A company runs a photo processing application that needs to frequently upload and download pictures from Amazon S3 buckets that are located in the same AWS Region. A solutions architect has noticed an increased cost in data transfer fees and needs to implement a solution to reduce these costs.<br><br>  How can the solutions architect meet this requirement?",
    "widget": "CI",
    "answers": [
      {
        "content": "Deploy Amazon API Gateway into a public subnet and adjust the route table to route S3 calls through it.",
        "is_correct": false
      },
      {
        "content": "Deploy a NAT gateway into a public subnet and attach an endpoint policy that allows access to the S3 buckets.",
        "is_correct": false
      },
      {
        "content": "Deploy the application into a public subnet and allow it to route through an internet gateway to access the S3 buckets.",
        "is_correct": false
      },
      {
        "content": "Deploy an S3 VPC gateway endpoint into the VPC and attach an endpoint policy that allows access to the S3 buckets.",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "To reduce costs get rid of NAT Gateway , VPC endpoint to S3."
    }
  },
  {
    "content": "A company recently launched Linux-based application instances on Amazon EC2 in a private subnet and launched a Linux-based bastion host on an Amazon EC2 instance in a public subnet of a VPC. A solutions architect needs to connect from the on-premises network, through the company's internet connection, to the bastion host, and to the application servers. The solutions architect must make sure that the security groups of all the EC2 instances will allow that access.<br><br>Which combination of steps should the solutions architect take to meet these requirements? (Choose two.)",
    "widget": "CM",
    "answers": [
      {
        "content": "A. Replace the current security group of the bastion host with one that only allows inbound access from the application instances.",
        "is_correct": false
      },
      {
        "content": "B. Replace the current security group of the bastion host with one that only allows inbound access from the internal IP range for the company.",
        "is_correct": false
      },
      {
        "content": "C. Replace the current security group of the bastion host with one that only allows inbound access from the external IP range for the company.",
        "is_correct": true
      },
      {
        "content": "D. Replace the current security group of the application instances with one that allows inbound SSH access from only the private IP address of the bastion host.",
        "is_correct": true
      },
      {
        "content": "E. Replace the current security group of the application instances with one that allows inbound SSH access from only the public IP address of the bastion host.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Allow access just from the external IP and allow inbound SSH from the private IP of the bastion host - are correct.<br><br>  The first one because from on-prem network to bastion through internet (using on-prem resource's public IP).<br><br>The second, because bastion and ec2 is in same VPC, meaning bastion can communicate to EC2 via it's private IP address."
    }
  },
  {
    "content": "A solutions architect is designing a two-tier web application. The application consists of a public-facing web tier hosted on Amazon EC2 in public subnets. The database tier consists of Microsoft SQL Server running on Amazon EC2 in a private subnet. Security is a high priority for the company.<br><br>How should security groups be configured in this situation? (Choose two.)",
    "widget": "CM",
    "answers": [
      {
        "content": "Configure the security group for the web tier to allow inbound traffic on port 443 from 0.0.0.0/0.",
        "is_correct": true
      },
      {
        "content": "Configure the security group for the web tier to allow outbound traffic on port 443 from 0.0.0.0/0.",
        "is_correct": false
      },
      {
        "content": "Configure the security group for the database tier to allow inbound traffic on port 1433 from the security group for the web tier.",
        "is_correct": true
      },
      {
        "content": "Configure the security group for the database tier to allow outbound traffic on ports 443 and 1433 to the security group for the web tier.",
        "is_correct": false
      },
      {
        "content": "Configure the security group for the database tier to allow inbound traffic on ports 443 and 1433 from the security group for the web tier.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "EC2 web on public subnets + EC2 SQL on private subnet + security is high priority.<br><br>  So, on web tier to allow HTTPS from everywhere. Plus allow inbound traffic on port 1433 **from the SG** in the db tier to allow SQL connection from the web instance."
    }
  },
  {
    "content": "A company wants to move a multi-tiered application from on premises to the AWS Cloud to improve the application's performance. The application consists of application tiers that communicate with each other by way of RESTful services. Transactions are dropped when one tier becomes overloaded. A solutions architect must design a solution that resolves these issues and modernizes the application.<br><br>Which solution meets these requirements and is the MOST operationally efficient?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use Amazon API Gateway and direct transactions to the AWS Lambda functions as the application layer. Use Amazon Simple Queue Service (Amazon SQS) as the communication layer between application services.",
        "is_correct": true
      },
      {
        "content": "Use Amazon CloudWatch metrics to analyze the application performance history to determine the servers' peak utilization during the performance failures. Increase the size of the application server's Amazon EC2 instances to meet the peak requirements.",
        "is_correct": false
      },
      {
        "content": "Use Amazon Simple Notification Service (Amazon SNS) to handle the messaging between application servers running on Amazon EC2 in an Auto Scaling group. Use Amazon CloudWatch to monitor the SNS queue length and scale up and down as required.",
        "is_correct": false
      },
      {
        "content": "Use Amazon Simple Queue Service (Amazon SQS) to handle the messaging between application servers running on Amazon EC2 in an Auto Scaling group. Use Amazon CloudWatch to monitor the SQS queue length and scale up when communication failures are detected.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Lambda = serverless + autoscale (modernize), SQS= decouple (no more drops). _API Gateway => Lambda => SQS_ is the best option."
    }
  },
  {
    "content": "A company receives 10 TB of instrumentation data each day from several machines located at a single factory. The data consists of JSON files stored on a storage area network (SAN) in an on-premises data center located within the factory. The company wants to send this data to Amazon S3 where it can be accessed by several additional systems that provide critical near-real-time analytics. A secure transfer is important because the data is considered sensitive.<br><br>Which solution offers the MOST reliable data transfer?",
    "widget": "CI",
    "answers": [
      {
        "content": "AWS DataSync over public internet",
        "is_correct": false
      },
      {
        "content": "AWS DataSync over AWS Direct Connect",
        "is_correct": true
      },
      {
        "content": "AWS Database Migration Service (AWS DMS) over public internet",
        "is_correct": false
      },
      {
        "content": "AWS Database Migration Service (AWS DMS) over AWS Direct Connect",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "DMS is for databases and here refers to “JSON files”. Public internet is not reliable. So best option is _'AWS DataSync over AWS Direct Connect'_. <br><br>  - A SAN presents storage devices to a host such that the storage appears to be locally attached. ( NFS is, or can be, a SAN - see [docs](https://serverfault.com/questions/499185/is-san-storage-better-than-nfs) ) <br><br>  - AWS Direct Connect does not encrypt your traffic that is in transit by default. But the connection is private.<br><br>  See [docs](https://docs.aws.amazon.com/directconnect/latest/UserGuide/encryption-in-transit.html)."
    }
  },
  {
    "content": "A company needs to configure a real-time data ingestion architecture for its application. The company needs an API, a process that transforms data as the data is streamed, and a storage solution for the data.<br><br>Which solution will meet these requirements with the LEAST operational overhead?",
    "widget": "CI",
    "answers": [
      {
        "content": "Deploy an Amazon EC2 instance to host an API that sends data to an Amazon Kinesis data stream. Create an Amazon Kinesis Data Firehose delivery stream that uses the Kinesis data stream as a data source. Use AWS Lambda functions to transform the data. Use the Kinesis Data Firehose delivery stream to send the data to Amazon S3.",
        "is_correct": false
      },
      {
        "content": "Deploy an Amazon EC2 instance to host an API that sends data to AWS Glue. Stop source/destination checking on the EC2 instance. Use AWS Glue to transform the data and to send the data to Amazon S3.",
        "is_correct": false
      },
      {
        "content": "Configure an Amazon API Gateway API to send data to an Amazon Kinesis data stream. Create an Amazon Kinesis Data Firehose delivery stream that uses the Kinesis data stream as a data source. Use AWS Lambda functions to transform the data. Use the Kinesis Data Firehose delivery stream to send the data to Amazon S3.",
        "is_correct": true
      },
      {
        "content": "Configure an Amazon API Gateway API to send data to AWS Glue. Use AWS Lambda functions to transform the data. Use AWS Glue to send the data to Amazon S3.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "You don't need to deploy an EC2 instance to host an API - Operational overhead.<br><br>AWS Glue gets data from S3, not from API GW. AWS Glue could do ETL by itself, so don't need lambda. Non-sense. See [docs](https://aws.amazon.com/glue/).<br><br>*API Gateway => KDS => KDF => Lambda* is the answer"
    }
  },
  {
    "content": "A company needs to keep user transaction data in an Amazon DynamoDB table. The company must retain the data for 7 years.<br><br>What is the MOST operationally efficient solution that meets these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use DynamoDB point-in-time recovery to back up the table continuously.",
        "is_correct": false
      },
      {
        "content": "Use AWS Backup to create backup schedules and retention policies for the table.",
        "is_correct": false
      },
      {
        "content": "Create an on-demand backup of the table by using the DynamoDB console. Store the backup in an Amazon S3 bucket. Set an S3 Lifecycle configuration for the S3 bucket.",
        "is_correct": false
      },
      {
        "content": "Create an Amazon EventBridge (Amazon CloudWatch Events) rule to invoke an AWS Lambda function. Configure the Lambda function to back up the table and to store the backup in an Amazon S3 bucket. Set an S3 Lifecycle configuration for the S3 bucket.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Amazon DynamoDB offers two types of backups: point-in-time recovery (PITR) and on-demand backups. (==> EventBridge + Lambda is not the answer) <br><br>PITR is used to recover your table to any point in time in a rolling 35 day window, which is used to help customers mitigate accidental deletes or writes to their tables from bad code, malicious access, or user error. (==> DynamoDB PITR isn't the answer)<br><br>On demand backups are designed for long-term archiving and retention, which is typically used to help customers meet compliance and regulatory requirements.<br><br>This is the second of a series of two blog posts about using AWS Backup to set up scheduled on-demand backups for Amazon DynamoDB. Part 1 presents the steps to set up a scheduled backup for DynamoDB tables from the AWS Management Console. (==> Not the DynamoBD console)"
    }
  },
  {
    "content": "A company has a production web application in which users upload documents through a web interface or a mobile app. According to a new regulatory requirement. new documents cannot be modified or deleted after they are stored.<br><br>What should a solutions architect do to meet this requirement?",
    "widget": "CI",
    "answers": [
      {
        "content": "Store the uploaded documents in an Amazon S3 bucket with S3 Versioning and S3 Object Lock enabled.",
        "is_correct": true
      },
      {
        "content": "Store the uploaded documents in an Amazon S3 bucket. Configure an S3 Lifecycle policy to archive the documents periodically.",
        "is_correct": false
      },
      {
        "content": "Store the uploaded documents in an Amazon S3 bucket with S3 Versioning enabled. Configure an ACL to restrict all access to read-only.",
        "is_correct": false
      },
      {
        "content": "Store the uploaded documents on an Amazon Elastic File System (Amazon EFS) volume. Access the data by mounting the volume in read-only mode.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Object Lock can help prevent objects from being deleted or overwritten for a fixed amount of time or indefinitely. You can use S3 Object Lock to meet regulatory requirements that require WORM (write-once-read-many ) storage, or add an extra layer of protection against object changes and deletion.<br><br>Versioning is required and automatically activated as Object Lock is enabled. See [docs](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-overview.html)."
    }
  },
  {
    "content": "A company has several web servers that need to frequently access a common Amazon RDS MySQL Multi-AZ DB instance. The company wants a secure method for the web servers to connect to the database while meeting a security requirement to rotate user credentials frequently.<br><br>Which solution meets these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Store the database user credentials in AWS Secrets Manager. Grant the necessary IAM permissions to allow the web servers to access AWS Secrets Manager.",
        "is_correct": true
      },
      {
        "content": "Store the database user credentials in AWS Systems Manager OpsCenter. Grant the necessary IAM permissions to allow the web servers to access OpsCenter.",
        "is_correct": false
      },
      {
        "content": "Store the database user credentials in a secure Amazon S3 bucket. Grant the necessary IAM permissions to allow the web servers to retrieve credentials and access the database.",
        "is_correct": false
      },
      {
        "content": "Store the database user credentials in files encrypted with AWS Key Management Service (AWS KMS) on the web server file system. The web server should be able to decrypt the files and access the database.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Secrets Manager enables you to replace hardcoded credentials in your code, including passwords, with an API call to Secrets Manager to retrieve the secret programmatically. This helps ensure the secret can't be compromised by someone examining your code, because the secret no longer exists in the code. Also, you can configure Secrets Manager to automatically rotate the secret for you according to a specified schedule. This enables you to replace long-term secrets with short-term ones, significantly reducing the risk of compromise. See [docs](https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html)."
    }
  },
  {
    "content": "A company hosts an application on AWS Lambda functions that are invoked by an Amazon API Gateway API. The Lambda functions save customer data to an Amazon Aurora MySQL database. Whenever the company upgrades the database, the Lambda functions fail to establish database connections until the upgrade is complete. The result is that customer data is not recorded for some of the event.<br><br>A solutions architect needs to design a solution that stores customer data that is created during database upgrades.<br><br>Which solution will meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Provision an Amazon RDS proxy to sit between the Lambda functions and the database. Configure the Lambda functions to connect to the RDS proxy.",
        "is_correct": false
      },
      {
        "content": "Increase the run time of the Lambda functions to the maximum. Create a retry mechanism in the code that stores the customer data in the database.",
        "is_correct": false
      },
      {
        "content": "Persist the customer data to Lambda local storage. Configure new Lambda functions to scan the local storage to save the customer data to the database.",
        "is_correct": false
      },
      {
        "content": "Store the customer data in an Amazon Simple Queue Service (Amazon SQS) FIFO queue. Create a new Lambda function that polls the queue and stores the customer data in the database.",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "Solution requirement is to store customer data while upgrading. Proxy can't do that. We need SQS.<br><br>RDA proxy needs a live DB such as a Standby DB during a failover of Primary DB.<br><br>We don't have any information that customer has several RDS databases. Hence RDS Proxy might not help by redirecting the load to another DB. "
    }
  },
  {
    "content": "A survey company has gathered data for several years from areas in the United States. The company hosts the data in an Amazon S3 bucket that is 3 TB in size and growing. The company has started to share the data with a European marketing firm that has S3 buckets. The company wants to ensure that its data transfer costs remain as low as possible.<br><br>Which solution will meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Configure the Requester Pays feature on the company's S3 bucket.",
        "is_correct": true
      },
      {
        "content": "Configure S3 Cross-Region Replication from the company's S3 bucket to one of the marketing firm's S3 buckets.",
        "is_correct": false
      },
      {
        "content": "Configure cross-account access for the marketing firm so that the marketing firm has access to the company's S3 bucket.",
        "is_correct": false
      },
      {
        "content": "Configure the company's S3 bucket to use S3 Intelligent-Tiering. Sync the S3 bucket to one of the marketing firm's S3 buckets.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Typically, you configure buckets to be Requester Pays buckets when you want to share data but not incur charges associated with others accessing the data. For example, you might use Requester Pays buckets when making available large datasets, such as zip code directories, reference data, geospatial information, or web crawling data.<br><br>If the question is looking for a way to incur charges to the European company instead of the US company, then requester pay makes sense.<br><br>if they are looking to reduce overall data transfer cost, then B makes sense because the data does not leave the AWS network, thus data transfer cost should be lower technically?<br><br>**Requester Pays** makes sense because the US company saves money, but the European company is paying for the charges so there is no overall saving in cost when you look at the big picture.<br><br>[See docs](https://docs.aws.amazon.com/AmazonS3/latest/userguide/RequesterPaysBuckets.html)"
    }
  },
  {
    "content": "A company uses Amazon S3 to store its confidential audit documents. The S3 bucket uses bucket policies to restrict access to audit team IAM user credentials according to the principle of least privilege. Company managers are worried about accidental deletion of documents in the S3 bucket and want a more secure solution.<br><br>What should a solutions architect do to secure the audit documents?",
    "widget": "CI",
    "answers": [
      {
        "content": "Enable the versioning and MFA Delete features on the S3 bucket.",
        "is_correct": true
      },
      {
        "content": "Enable multi-factor authentication (MFA) on the IAM user credentials for each audit team IAM user account.",
        "is_correct": false
      },
      {
        "content": "Add an S3 Lifecycle policy to the audit team's IAM user accounts to deny the s3:DeleteObject action during audit dates.",
        "is_correct": false
      },
      {
        "content": "Use AWS Key Management Service (AWS KMS) to encrypt the S3 bucket and restrict audit team IAM user accounts from accessing the KMS key.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": ""
    }
  },
  {
    "content": "A company is using a SQL database to store movie data that is publicly accessible. The database runs on an Amazon RDS Single-AZ DB instance. A script runs queries at random intervals each day to record the number of new movies that have been added to the database. The script must report a final total during business hours.<br><br>The company's development team notices that the database performance is inadequate for development tasks when the script is running. A solutions architect must recommend a solution to resolve this issue.<br><br>Which solution will meet this requirement with the LEAST operational overhead?",
    "widget": "CI",
    "answers": [
      {
        "content": "Modify the DB instance to be a Multi-AZ deployment.",
        "is_correct": false
      },
      {
        "content": "Create a read replica of the database. Configure the script to query only the read replica.",
        "is_correct": true
      },
      {
        "content": "Instruct the development team to manually export the entries in the database at the end of each day.",
        "is_correct": false
      },
      {
        "content": "Use Amazon ElastiCache to cache the common queries that the script runs against the database.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "• You have a production DB that is taking on a normal load.<br>• You want to run a reporting application to run some analytics.<br>• You create a read replica to run the new workload there.<br>• The prod application is unaffected.<br>• Read replicas are used for SELECT (=read) only kind of statements.<br>Therefore I believe B to be the better answer."
    }
  },
  {
    "content": "A company has applications that run on Amazon EC2 instances in a VPC. One of the applications needs to call the Amazon S3 API to store and read objects. According to the company's security regulations, no traffic from the applications is allowed to travel across the internet.<br><br>Which solution will meet these requirements?",
    "widget": "CI",
    "answers": [
      {
        "content": "Configure an S3 gateway endpoint.",
        "is_correct": true
      },
      {
        "content": "Create an S3 bucket in a private subnet.",
        "is_correct": false
      },
      {
        "content": "Create an S3 bucket in the same AWS Region as the EC2 instances.",
        "is_correct": false
      },
      {
        "content": "Configure a NAT gateway in the same subnet as the EC2 instances.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": ""
    }
  },
  {
    "content": "A company is storing sensitive user information in an Amazon S3 bucket. The company wants to provide secure access to this bucket from the application tier running on Amazon EC2 instances inside a VPC.<br><br>Which combination of steps should a solutions architect take to accomplish this? (Choose two.)",
    "widget": "CM",
    "answers": [
      {
        "content": "Configure a VPC gateway endpoint for Amazon S3 within the VPC.",
        "is_correct": true
      },
      {
        "content": "Create a bucket policy to make the objects in the S3 bucket public.",
        "is_correct": false
      },
      {
        "content": "Create a bucket policy that limits access to only the application tier running in the VPC.",
        "is_correct": true
      },
      {
        "content": "Create an IAM user with an S3 access policy and copy the IAM credentials to the EC2 instance.",
        "is_correct": false
      },
      {
        "content": "Create a NAT instance and have the EC2 instances use the NAT instance to access the S3 bucket.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": ""
    }
  },
  {
    "content": "A company runs an application that uses an Amazon RDS PostgreSQL database. The database is currently not encrypted. A Solutions Architect has been instructed that due to new compliance requirements all existing and new data in the database must be encrypted. The database experiences high volumes of changes and no data can be lost.<br><br>How can the Solutions Architect enable encryption for the database without incurring any data loss?",
    "widget": "CI",
    "answers": [
      {
        "content": "Create an RDS read replica and specify an encryption key. Promote the encrypted read replica to primary. Update the application to point to the new RDS DB endpoint.",
        "is_correct": false
      },
      {
        "content": "Create a snapshot of the existing RDS DB instance. Create an encrypted copy of the snapshot. Create a new RDS DB instance from the encrypted snapshot and update the application. Use AWS DMS to synchronize data between the source and destination RDS DBs.",
        "is_correct": true
      },
      {
        "content": "Create a snapshot of the existing RDS DB instance. Create an encrypted copy of the snapshot. Create a new RDS DB instance from the encrypted snapshot. Configure the application to use the new DB endpoint.",
        "is_correct": false
      },
      {
        "content": "Update the RDS DB to Multi-AZ mode and enable encryption for the standby replica. Perform a failover to the standby instance and then delete the unencrypted RDS DB instance.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "You cannot change the encryption status of an existing RDS DB instance. Encryption must be specified when creating the RDS DB instance. The best way to encrypt an existing database is to take a snapshot, encrypt a copy of the snapshot and restore the snapshot to a new RDS DB instance. This results in an encrypted database that is a new instance. Applications must be updated to use the new RDS DB endpoint.<br><br>In this scenario as there is a high rate of change, the databases will be out of sync by the time the new copy is created and is functional. The best way to capture the changes between the source (unencrypted) and destination (encrypted) DB is to use AWS Database Migration Service (DMS) to synchronize the data."
    }
  },
  {
    "content": "A solutions architect is creating a document submission application for a school. The application will use an Amazon S3 bucket for storage. The solution must prevent accidental deletion of the documents and ensure that all versions of the documents are available. Users must be able to upload and modify the documents.<br><br>Which combination of actions should be taken to meet these requirements? (Select TWO.)",
    "widget": "CM",
    "answers": [
      {
        "content": "Attach an IAM policy to the bucket",
        "is_correct": false
      },
      {
        "content": "Enable versioning on the bucket",
        "is_correct": true
      },
      {
        "content": "Encrypt the bucket using AWS SSE-S3",
        "is_correct": false
      },
      {
        "content": "Set read-only permissions on the bucket",
        "is_correct": false
      },
      {
        "content": "Enable MFA Delete on the bucket",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "None of the options present a good solution for specifying permissions required to write and modify objects so that requirement needs to be taken care of separately. The other requirements are to prevent accidental deletion and the ensure that all versions of the document are available.<br><br>The two solutions for these requirements are versioning and MFA delete. Versioning will retain a copy of each version of the document and multi-factor authentication delete (MFA delete) will prevent any accidental deletion as you need to supply a second factor when attempting a delete."
    }
  },
  {
    "content": "A solutions architect is creating a system that will run analytics on financial data for several hours a night, 5 days a week. The analysis is expected to run for the same duration and cannot be interrupted once it is started. The system will be required for a minimum of 1 year.<br><br>What should the solutions architect configure to ensure the EC2 instances are available when they are needed?",
    "widget": "CI",
    "answers": [
      {
        "content": "Regional Reserved Instances",
        "is_correct": false
      },
      {
        "content": "On-Demand Instances",
        "is_correct": false
      },
      {
        "content": "Savings Plans",
        "is_correct": false
      },
      {
        "content": "On-Demand Capacity Reservations",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "On-Demand Capacity Reservations enable you to reserve compute capacity for your Amazon EC2 instances in a specific Availability Zone for any duration. This gives you the ability to create and manage Capacity Reservations independently from the billing discounts offered by Savings Plans or Regional Reserved Instances.<br><br>By creating Capacity Reservations, you ensure that you always have access to EC2 capacity when you need it, for as long as you need it. You can create Capacity Reservations at any time, without entering a one-year or three-year term commitment, and the capacity is available immediately."
    }
  },
  {
    "content": "A Microsoft Windows file server farm uses Distributed File System Replication (DFSR) to synchronize data in an on-premises environment. The infrastructure is being migrated to the AWS Cloud.<br><br>Which service should the solutions architect use to replace the file server farm?",
    "widget": "CI",
    "answers": [
      {
        "content": "Amazon FSx",
        "is_correct": true
      },
      {
        "content": "Amazon EBS",
        "is_correct": false
      },
      {
        "content": "Amazon EFS",
        "is_correct": false
      },
      {
        "content": "AWS Storage Gateway",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Amazon FSx for Windows file server supports DFS namespaces and DFS replication. This is the best solution for replacing the on-premises infrastructure."
    }
  },
  {
    "content": "An Amazon S3 bucket in the us-east-1 Region hosts the static website content of a company. The content is made available through an Amazon CloudFront origin pointing to that bucket. A second copy of the bucket is created in the ap-southeast-1 Region using cross-region replication. The chief solutions architect wants a solution that provides greater availability for the website.<br><br>Which combination of actions should a solutions architect take to increase availability? (Select TWO.)",
    "widget": "CM",
    "answers": [
      {
        "content": "Using us-east-1 bucket as the primary bucket and ap-southeast-1 bucket as the secondary bucket, create a CloudFront origin group.",
        "is_correct": true
      },
      {
        "content": "Set up failover routing in Amazon Route 53.",
        "is_correct": false
      },
      {
        "content": "Point Amazon Route 53 to the replica bucket by creating a record.",
        "is_correct": false
      },
      {
        "content": "Create an origin for CloudFront for both buckets.",
        "is_correct": false
      },
      {
        "content": "Add an origin for ap-southeast-1 to CloudFront.",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "You can set up CloudFront with origin failover for scenarios that require high availability. To get started, you create an origin group with two origins: a primary and a secondary. If the primary origin is unavailable or returns specific HTTP response status codes that indicate a failure, CloudFront automatically switches to the secondary origin.<br><br>\"Create an origin for CloudFront for both buckets” is incorrect. This would not increase the availability of the solution on its own.<br><br>'Set up failover routing in Amazon Route 53' is incorrect as we are trying to enable failover in CloudFront and using Route 53 is for routing domain names.<br><br>'Create a record in Amazon Route 53 pointing to the replica bucket' is incorrect as we are trying to enable failover in CloudFront and using Route 53 is for routing domain names."
    }
  },
  {
    "content": "A company is migrating from an on-premises infrastructure to the AWS Cloud. One of the company's applications stores files on a Windows file server farm that uses Distributed File System Replication (DFSR) to keep data in sync. A solutions architect needs to replace the file server farm.<br><br>Which service should the solutions architect use?",
    "widget": "CI",
    "answers": [
      {
        "content": "Amazon EFS",
        "is_correct": false
      },
      {
        "content": "Amazon S3",
        "is_correct": false
      },
      {
        "content": "Amazon FSx",
        "is_correct": true
      },
      {
        "content": "AWS Storage Gateway",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Amazon FSx for Windows File Server provides fully managed, highly reliable file storage that is accessible over the industry-standard Server Message Block (SMB) protocol.<br><br>Amazon FSx is built on Windows Server and provides a rich set of administrative features that include end-user file restore, user quotas, and Access Control Lists (ACLs).<br><br><br><br>Additionally, Amazon FSX for Windows File Server supports Distributed File System Replication (DFSR) in Single-AZ deployments as can be seen in the feature comparison table below."
    }
  },
  {
    "content": "Amazon EC2 instances in a development environment run between 9am and 5pm Monday-Friday. Production instances run 24/7. Which pricing models should be used to optimize cost and ensure capacity is available? (Select TWO.)",
    "widget": "CM",
    "answers": [
      {
        "content": "On-demand capacity reservations for the development environment",
        "is_correct": true
      },
      {
        "content": "Use Reserved instances for the development environment",
        "is_correct": false
      },
      {
        "content": "Use Reserved instances for the production environment",
        "is_correct": true
      },
      {
        "content": "Use On-Demand instances for the production environment",
        "is_correct": false
      },
      {
        "content": "Use Spot instances for the development environment",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Capacity reservations have no commitment and can be created and canceled as needed. This is ideal for the development environment as it will ensure the capacity is available. There is no price advantage but none of the other options provide a price advantage whilst also ensuring capacity is available<br><br>Reserved instances are a good choice for workloads that run continuously. This is a good option for the production environment.<br><br>'Use Spot instances for the development environment' is incorrect. Spot Instances are a cost-effective choice if you can be flexible about when your applications run and if your applications can be interrupted. Spot instances are not suitable for the development environment as important work may be interrupted.<br><br>'Use Reserved instances for the development environment' is incorrect as they require a long-term commitment which is not ideal for a development environment.<br><br>'Use On-Demand instances for the production environment' is incorrect. There is no long-term commitment required when you purchase On-Demand Instances. However, you do not get any discount and therefore this is the most expensive option."
    }
  },
  {
    "content": "A company uses an Amazon RDS MySQL database instance to store customer order data. The security team have requested that SSL/TLS encryption in transit must be used for encrypting connections to the database from application servers. The data in the database is currently encrypted at rest using an AWS KMS key.<br><br>How can a Solutions Architect enable encryption in transit?",
    "widget": "CI",
    "answers": [
      {
        "content": "Add a self-signed certificate to the RDS DB instance. Use the certificates in all connections to the RDS DB instance.",
        "is_correct": false
      },
      {
        "content": "Take a snapshot of the RDS instance. Restore the snapshot to a new instance with encryption in transit enabled.",
        "is_correct": false
      },
      {
        "content": "Download the AWS-provided root certificates. Use the certificates when connecting to the RDS DB instance.",
        "is_correct": true
      },
      {
        "content": "Enable encryption in transit using the RDS Management console and obtain a key using AWS KMS.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Amazon RDS creates an SSL certificate and installs the certificate on the DB instance when Amazon RDS provisions the instance. These certificates are signed by a certificate authority. The SSL certificate includes the DB instance endpoint as the Common Name (CN) for the SSL certificate to guard against spoofing attacks.<br><br>You can download a root certificate from AWS that works for all Regions or you can download Region-specific intermediate certificates.<br><br>'Take a snapshot of the RDS instance. Restore the snapshot to a new instance with encryption in transit enabled' is incorrect. There is no need to do this as a certificate is created when the DB instances is launched.<br><br>'Enable encryption in transit using the RDS Management console and obtain a key using AWS KMS' is incorrect. You cannot enable/disable encryption in transit using the RDS management console or use a KMS key.<br><br>'Add a self-signed certificate to the RDS DB instance. Use the certificates in all connections to the RDS DB instance' is incorrect. You cannot use self-signed certificates with RDS."
    }
  },
  {
    "content": "A company runs an application on an Amazon EC2 instance the requires 250 GB of storage space. The application is not used often and has small spikes in usage on weekday mornings and afternoons. The disk I/O can vary with peaks hitting a maximum of 3,000 IOPS. A Solutions Architect must recommend the most cost-effective storage solution that delivers the performance required.<br><br>Which configuration should the Solutions Architect recommend?<br><br>Which solution should the solutions architect recommend?",
    "widget": "CI",
    "answers": [
      {
        "content": "Add a self-signed certificate to the RDS DB instance. Use the certificates in all connections to the RDS DB instance.",
        "is_correct": false
      },
      {
        "content": "Take a snapshot of the RDS instance. Restore the snapshot to a new instance with encryption in transit enabled.",
        "is_correct": false
      },
      {
        "content": "Download the AWS-provided root certificates. Use the certificates when connecting to the RDS DB instance.",
        "is_correct": true
      },
      {
        "content": "Enable encryption in transit using the RDS Management console and obtain a key using AWS KMS.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Amazon RDS creates an SSL certificate and installs the certificate on the DB instance when Amazon RDS provisions the instance. These certificates are signed by a certificate authority. The SSL certificate includes the DB instance endpoint as the Common Name (CN) for the SSL certificate to guard against spoofing attacks.<br><br>You can download a root certificate from AWS that works for all Regions or you can download Region-specific intermediate certificates."
    }
  },
  {
    "content": "A company runs an application on an Amazon EC2 instance the requires 250 GB of storage space. The application is not used often and has small spikes in usage on weekday mornings and afternoons. The disk I/O can vary with peaks hitting a maximum of 3,000 IOPS. A Solutions Architect must recommend the most cost-effective storage solution that delivers the performance required.<br><br>Which configuration should the Solutions Architect recommend?<br><br>Which solution should the solutions architect recommend?",
    "widget": "CI",
    "answers": [
      {
        "content": "Amazon EBS Cold HDD (sc1)",
        "is_correct": false
      },
      {
        "content": "Amazon EBS Provisioned IOPS SSD (i01)",
        "is_correct": false
      },
      {
        "content": "Amazon EBS Throughput Optimized HDD (st1)",
        "is_correct": false
      },
      {
        "content": "Amazon EBS General Purpose SSD (gp2)",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "General Purpose SSD (gp2) volumes offer cost-effective storage that is ideal for a broad range of workloads. These volumes deliver single-digit millisecond latencies and the ability to burst to 3,000 IOPS for extended periods of time.<br><br>Between a minimum of 100 IOPS (at 33.33 GiB and below) and a maximum of 16,000 IOPS (at 5,334 GiB and above), baseline performance scales linearly at 3 IOPS per GiB of volume size. AWS designs gp2 volumes to deliver their provisioned performance 99% of the time. A gp2 volume can range in size from 1 GiB to 16 TiB.<br><br>In this configuration the volume will provide a baseline performance of 750 IOPS but will always be able to burst to the required 3,000 IOPS during periods of increased traffic."
    }
  },
  {
    "content": "A Solutions Architect has deployed an application on several Amazon EC2 instances across three private subnets. The application must be made accessible to internet-based clients with the least amount of administrative effort.<br><br>How can the Solutions Architect make the application available on the internet?",
    "widget": "CI",
    "answers": [
      {
        "content": "Create an Application Load Balancer and associate three private subnets from the same Availability Zones as the private instances. Add the private instances to the ALB.",
        "is_correct": false
      },
      {
        "content": "Create an Application Load Balancer and associate three public subnets from the same Availability Zones as the private instances. Add the private instances to the ALB.",
        "is_correct": true
      },
      {
        "content": "Create an Amazon Machine Image (AMI) of the instances in the private subnet and launch new instances from the AMI in public subnets. Create an Application Load Balancer and add the public instances to the ALB.",
        "is_correct": false
      },
      {
        "content": "Create a NAT gateway in a public subnet. Add a route to the NAT gateway to the route tables of the three private subnets.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "To make the application instances accessible on the internet the Solutions Architect needs to place them behind an internet-facing Elastic Load Balancer. The way you add instances in private subnets to a public facing ELB is to add public subnets in the same AZs as the private subnets to the ELB. You can then add the instances and to the ELB and they will become targets for load balancing.<br><br>INCORRECT: 'Create an Application Load Balancer and associate three private subnets from the same Availability Zones as the private instances. Add the private instances to the ALB' is incorrect. Public subnets in the same AZs as the private subnets must be added to make this configuration work.<br><br>INCORRECT: 'Create an Amazon Machine Image (AMI) of the instances in the private subnet and launch new instances from the AMI in public subnets. Create an Application Load Balancer and add the public instances to the ALB' is incorrect. There is no need to use an AMI to create new instances in a public subnet. You can add instances in private subnets to a public-facing ELB.<br><br>INCORRECT: 'Create a NAT gateway in a public subnet. Add a route to the NAT gateway to the route tables of the three private subnets' is incorrect. A NAT gateway is used for outbound traffic not inbound traffic and cannot make the application available to internet-based clients."
    }
  },
  {
    "content": "A company needs to connect its on-premises data center network to a new virtual private cloud (VPC). There is a symmetrical internet connection of 100 Mbps in the data center network. The data transfer rate for an on-premises application is multiple gigabytes per day. Processing will be done using an Amazon Kinesis Data Firehose stream.<br><br>What should a solutions architect recommend for maximum performance?",
    "widget": "CI",
    "answers": [
      {
        "content": "Kinesis Data Firehose can be connected to the VPC using AWS PrivateLink. Install a 1 Gbps AWS Direct Connect connection between the on-premises network and AWS. To send data from on-premises to Kinesis Data Firehose, use the PrivateLink endpoint.",
        "is_correct": true
      },
      {
        "content": "Establish a peering connection between the on-premises network and the VPC. Configure routing for the on-premises network to use the VPC peering connection.",
        "is_correct": false
      },
      {
        "content": "Get an AWS Snowball Edge Storage Optimized device. Data must be copied to the device after several days and shipped to AWS for expedited transfer to Kinesis Data Firehose. Repeat as necessary.",
        "is_correct": false
      },
      {
        "content": "Establish an AWS Site-to-Site VPN connection between the on-premises network and the VPC. Set up BGP routing between the customer gateway and the virtual private gateway. Send data to Kinesis Data Firehose using a VPN connection.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Using AWS PrivateLink to create an interface endpoint will allow your traffic to traverse the AWS Global Backbone to allow maximum performance and security. Also by using an AWS Direct Connect cable you can ensure you have a dedicated cable to provide maximum performance and low latency to and from AWS."
    }
  },
  {
    "content": "An application running on an Amazon ECS container instance using the EC2 launch type needs permissions to write data to Amazon DynamoDB.<br><br>How can you assign these permissions only to the specific ECS task that is running the application?",
    "widget": "CI",
    "answers": [
      {
        "content": "Create an IAM policy with permissions to DynamoDB and attach it to the container instance",
        "is_correct": false
      },
      {
        "content": "Use a security group to allow outbound connections to DynamoDB and assign it to the container instance",
        "is_correct": false
      },
      {
        "content": "Create an IAM policy with permissions to DynamoDB and assign It to a task using the <em>taskRoleArn</em> parameter",
        "is_correct": true
      },
      {
        "content": "Modify the <em>AmazonECSTaskExecutionRolePolicy</em> policy to add permissions for DynamoDB",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "To specify permissions for a specific task on Amazon ECS you should use IAM Roles for Tasks. The permissions policy can be applied to tasks when creating the task definition, or by using an IAM task role override using the AWS CLI or SDKs. The taskRoleArn parameter is used to specify the policy."
    }
  },
  {
    "content": "A company requires that all AWS IAM user accounts have specific complexity requirements and minimum password length.<br><br>How should a Solutions Architect accomplish this?",
    "widget": "CI",
    "answers": [
      {
        "content": "Use an AWS Config rule to enforce the requirements when creating user accounts.",
        "is_correct": false
      },
      {
        "content": "Create an IAM policy that enforces the requirements and apply it to all users.",
        "is_correct": false
      },
      {
        "content": "Set a password policy for the entire AWS account.",
        "is_correct": true
      },
      {
        "content": "Set a password policy for each IAM user in the AWS account.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "The easiest way to enforce this requirement is to update the password policy that applies to the entire AWS account. When you create or change a password policy, most of the password policy settings are enforced the next time your users change their passwords. However, some of the settings are enforced immediately such as the password expiration period."
    }
  },
  {
    "content": "An AWS Organization has an OU with multiple member accounts in it. The company needs to restrict the ability to launch only specific Amazon EC2 instance types. How can this policy be applied across the accounts with the least effort?",
    "widget": "CI",
    "answers": [
      {
        "content": "Create an SCP with an allow rule that allows launching the specific instance types",
        "is_correct": false
      },
      {
        "content": "Use AWS Resource Access Manager to control which launch types can be used",
        "is_correct": false
      },
      {
        "content": "Create an IAM policy to deny launching all but the specific instance types",
        "is_correct": false
      },
      {
        "content": "Create an SCP with a deny rule that denies all but the specific instance types",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "To apply the restrictions across multiple member accounts you must use a Service Control Policy (SCP) in the AWS Organization. The way you would do this is to create a deny rule that applies to anything that does not equal the specific instance type you want to allow."
    }
  },
  {
    "content": "A new application is to be published in multiple regions around the world. The Architect needs to ensure only 2 IP addresses need to be whitelisted. The solution should intelligently route traffic for lowest latency and provide fast regional failover.<br><br>How can this be achieved?",
    "widget": "CI",
    "answers": [
      {
        "content": "Launch EC2 instances into multiple regions behind an NLB and use AWS Global Accelerator",
        "is_correct": true
      },
      {
        "content": "Launch EC2 instances into multiple regions behind an ALB and use Amazon CloudFront with a pair of static IP addresses",
        "is_correct": false
      },
      {
        "content": "Launch EC2 instances into multiple regions behind an NLB with a static IP address",
        "is_correct": false
      },
      {
        "content": "Launch EC2 instances into multiple regions behind an ALB and use a Route 53 failover routing policy",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "AWS Global Accelerator uses the vast, congestion-free AWS global network to route TCP and UDP traffic to a healthy application endpoint in the closest AWS Region to the user.<br><br>This means it will intelligently route traffic to the closest point of presence (reducing latency). Seamless failover is ensured as AWS Global Accelerator uses anycast IP address which means the IP does not change when failing over between regions so there are no issues with client caches having incorrect entries that need to expire.<br><br>This is the only solution that provides deterministic failover."
    }
  },
  {
    "content": "A surveying team is using a fleet of drones to collect images of construction sites. The surveying team's laptops lack the inbuilt storage and compute capacity to transfer the images and process the data. While the team has Amazon EC2 instances for processing and Amazon S3 buckets for storage, network connectivity is intermittent and unreliable. The images need to be processed to evaluate the progress of each construction site.<br><br>What should a solutions architect recommend?",
    "widget": "CI",
    "answers": [
      {
        "content": "During intermittent connectivity to EC2 instances, upload images to Amazon SQS.",
        "is_correct": false
      },
      {
        "content": "Configure Amazon Kinesis Data Firehose to create multiple delivery streams aimed separately at the S3 buckets for storage and the EC2 instances for processing the images.",
        "is_correct": false
      },
      {
        "content": "Cache the images locally on a hardware appliance pre-installed with AWS Storage Gateway to process the images when connectivity is restored.",
        "is_correct": false
      },
      {
        "content": "Process and store the images using AWS Snowball Edge devices.",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "AWS physical Snowball Edge device will provide much more inbuilt compute and storage compared to the current team’s laptops. This negates the need to rely on a stable connection to process any images and solves the team's problems easily and efficiently."
    }
  },
  {
    "content": "A company's application is running on Amazon EC2 instances in a single Region. In the event of a disaster, a solutions architect needs to ensure that the resources can also be deployed to a second Region.<br><br>Which combination of actions should the solutions architect take to accomplish this? (Select TWO.)",
    "widget": "CM",
    "answers": [
      {
        "content": "Copy an Amazon Elastic Block Store (Amazon EBS) volume from Amazon S3 and launch an EC2 instance in the second Region using that EBS volume",
        "is_correct": false
      },
      {
        "content": "Launch a new EC2 instance from an Amazon Machine Image (AMI) in the second Region",
        "is_correct": true
      },
      {
        "content": "Detach a volume on an EC2 instance and copy it to an Amazon S3 bucket in the second Region",
        "is_correct": false
      },
      {
        "content": "Copy an Amazon Machine Image (AMI) of an EC2 instance and specify the second Region for the destination",
        "is_correct": true
      },
      {
        "content": "Launch a new EC2 instance in the second Region and copy a volume from Amazon S3 to the new instance",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "You can copy an Amazon Machine Image (AMI) within or across AWS Regions using the AWS Management Console, the AWS Command Line Interface or SDKs, or the Amazon EC2 API, all of which support the CopyImage action.<br><br>Using the copied AMI the solutions architect would then be able to launch an instance from the same EBS volume in the second Region.<br><br>Note: the AMIs are stored on Amazon S3, however you cannot view them in the S3 management console or work with them programmatically using the S3 API."
    }
  },
  {
    "content": "A team are planning to run analytics jobs on log files each day and require a storage solution. The size and number of logs is unknown and data will persist for 24 hours only.<br><br>What is the MOST cost-effective solution?",
    "widget": "CI",
    "answers": [
      {
        "content": "Amazon S3 Intelligent-Tiering",
        "is_correct": false
      },
      {
        "content": "Amazon S3 Glacier Deep Archive",
        "is_correct": false
      },
      {
        "content": "Amazon S3 One Zone-Infrequent Access (S3 One Zone-IA)",
        "is_correct": false
      },
      {
        "content": "Amazon S3 Standard",
        "is_correct": true
      }
    ],
    "explanation": {
      "content": "S3 standard is the best choice in this scenario for a short term storage solution. In this case the size and number of logs is unknown and it would be difficult to fully assess the access patterns at this stage. Therefore, using S3 standard is best as it is cost-effective, provides immediate access, and there are no retrieval fees or minimum capacity charge per object."
    }
  },
  {
    "content": "An Amazon VPC contains several Amazon EC2 instances. The instances need to make API calls to Amazon DynamoDB. A solutions architect needs to ensure that the API calls do not traverse the internet.<br><br>How can this be accomplished? (Select TWO.)",
    "widget": "CM",
    "answers": [
      {
        "content": "Create a VPC peering connection between the VPC and DynamoDB",
        "is_correct": false
      },
      {
        "content": "Create an ENI for the endpoint in each of the subnets of the VPC",
        "is_correct": false
      },
      {
        "content": "Create a gateway endpoint for DynamoDB",
        "is_correct": true
      },
      {
        "content": "Create a route table entry for the endpoint",
        "is_correct": true
      },
      {
        "content": "Create a new DynamoDB table that uses the endpoint",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Amazon DynamoDB and Amazon S3 support gateway endpoints, not interface endpoints. With a gateway endpoint you create the endpoint in the VPC, attach a policy allowing access to the service, and then specify the route table to create a route table entry in."
    }
  },
  {
    "content": "A web application runs in public and private subnets. The application architecture consists of a web tier and database tier running on Amazon EC2 instances. Both tiers run in a single Availability Zone (AZ).<br><br>Which combination of steps should a solutions architect take to provide high availability for this architecture? (Select TWO.)",
    "widget": "CM",
    "answers": [
      {
        "content": "Create an Amazon EC2 Auto Scaling group and Application Load Balancer (ALB) spanning multiple AZs",
        "is_correct": true
      },
      {
        "content": "Create new public and private subnets in the same VPC, each in a new AZ. Migrate the database to an Amazon RDS multi-AZ deployment",
        "is_correct": true
      },
      {
        "content": "Add the existing web application instances to an Auto Scaling group behind an Application Load Balancer (ALB)",
        "is_correct": false
      },
      {
        "content": "Create new public and private subnets in a new AZ. Create a database using Amazon EC2 in one AZ",
        "is_correct": false
      },
      {
        "content": "Create new public and private subnets in the same AZ for high availability",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "To add high availability to this architecture both the web tier and database tier require changes. For the web tier an Auto Scaling group across multiple AZs with an ALB will ensure there are always instances running and traffic is being distributed to them.<br><br>The database tier should be migrated from the EC2 instances to Amazon RDS to take advantage of a managed database with Multi-AZ functionality. This will ensure that if there is an issue preventing access to the primary database a secondary database can take over."
    }
  },
  {
    "content": "A financial services company has a web application with an application tier running in the U.S and Europe. The database tier consists of a MySQL database running on Amazon EC2 in us-west-1. Users are directed to the closest application tier using Route 53 latency-based routing. The users in Europe have reported poor performance when running queries.<br><br>Which changes should a Solutions Architect make to the database tier to improve performance?",
    "widget": "CI",
    "answers": [
      {
        "content": "Migrate the database to Amazon RDS for MySQL. Configure Multi-AZ in one of the European Regions.",
        "is_correct": false
      },
      {
        "content": "Migrate the database to an Amazon Aurora global database in MySQL compatibility mode. Configure the application tier in Europe to use the local reader endpoint.",
        "is_correct": true
      },
      {
        "content": "Migrate the database to Amazon RedShift. Use AWS DMS to synchronize data. Configure applications to use the RedShift data warehouse for queries.",
        "is_correct": false
      },
      {
        "content": "Create an Amazon RDS Read Replica in one of the European regions. Configure the application tier in Europe to use the read replica for queries.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Amazon Aurora Global Database is designed for globally distributed applications, allowing a single Amazon Aurora database to span multiple AWS regions. It replicates your data with no impact on database performance, enables fast local reads with low latency in each region, and provides disaster recovery from region-wide outages.<br><br>A global database can be configured in the European region and then the application tier in Europe will need to be configured to use the local database for reads/queries. The diagram below depicts an Aurora Global Database deployment."
    }
  },
  {
    "content": "A persistent database must be migrated from an on-premises server to an Amazon EC2 instances. The database requires 64,000 IOPS and, if possible, should be stored on a single Amazon EBS volume.<br><br>Which solution should a Solutions Architect recommend?",
    "widget": "CI",
    "answers": [
      {
        "content": "Create a Nitro-based Amazon EC2 instance with an Amazon EBS Provisioned IOPS SSD (i01) volume attached. Provision 64,000 IOPS for the volume.",
        "is_correct": true
      },
      {
        "content": "Create an Amazon EC2 instance with two Amazon EBS Provisioned IOPS SSD (i01) volumes attached. Provision 32,000 IOPS per volume and create a logical volume using the OS that aggregates the capacity.",
        "is_correct": false
      },
      {
        "content": "Use an instance from the I3 I/O optimized family and leverage instance store storage to achieve the IOPS requirement.",
        "is_correct": false
      },
      {
        "content": "Create an Amazon EC2 instance with four Amazon EBS General Purpose SSD (gp2) volumes attached. Max out the IOPS on each volume and use a RAID 0 stripe set.",
        "is_correct": false
      }
    ],
    "explanation": {
      "content": "Amazon EC2 Nitro-based systems are not required for this solution but do offer advantages in performance that will help to maximize the usage of the EBS volume. For the data storage volume an i01 volume can support up to 64,000 IOPS so a single volume with sufficient capacity (50 IOPS per GiB) can be deliver the requirements."
    }
  }
]
